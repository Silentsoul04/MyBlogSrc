<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>泽民博客</title>
    <description>夏泽民的个人主页，学习笔记。</description>
    <link>https://xiazemin.github.io/MyBlog/</link>
    <atom:link href="https://xiazemin.github.io/MyBlog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 13 Sep 2017 15:11:14 +0800</pubDate>
    <lastBuildDate>Wed, 13 Sep 2017 15:11:14 +0800</lastBuildDate>
    <generator>Jekyll v3.6.0.pre.beta1</generator>
    
      <item>
        <title>常见SSL证书格式转换</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;转换DER证书为PEM格式,抓HTTPS时会用到
openssl x509 -in cert.cer -inform DER -outform PEM -out cert.pem
PKCS 全称是 Public-Key Cryptography Standards ，是由 RSA 实验室与其它安全系统开发商为促进公钥密码的发展而制订的一系列标准，PKCS 目前共发布过 15 个标准。 常用的有：
PKCS#7 Cryptographic Message Syntax Standard
PKCS#10 Certification Request Standard
PKCS#12 Personal Information Exchange Syntax Standard
X.509是常见通用的证书格式。所有的证书都符合为Public Key Infrastructure (PKI) 制定的 ITU-T X509 国际标准。
PKCS#7 常用的后缀是： .P7B .P7C .SPC
PKCS#12 常用的后缀有： .P12 .PFX
X.509 DER 编码(ASCII)的后缀是： .DER .CER .CRT
X.509 PAM 编码(Base64)的后缀是： .PEM .CER .CRT
.cer/.crt是用于存放证书，它是2进制形式存放的，不含私钥。
.pem跟crt/cer的区别是它以Ascii来表示。
pfx/p12用于存放个人证书/私钥，他通常包含保护密码，2进制方式
p10是证书请求
p7r是CA对证书请求的回复，只用于导入
p7b以树状展示证书链(certificate chain)，同时也支持单个证书，不含私钥。&lt;/p&gt;

&lt;p&gt;一 用openssl创建CA证书的RSA密钥(PEM格式)：
openssl genrsa -des3 -out ca.key 1024
二用openssl创建CA证书(PEM格式,假如有效期为一年)：
openssl req -new -x509 -days 365 -key ca.key -out ca.crt -config openssl.cnf
openssl是可以生成DER格式的CA证书的，最好用IE将PEM格式的CA证书转换成DER格式的CA证书。
三 x509到pfx
c:\openssl-1.0.0d\out32\openssl pkcs12 -export -in .\xinhr.pem -inkey .\xinhr.key -out .\xinghr.pfx
四 PEM格式的ca.key转换为Microsoft可以识别的pvk格式。
  pvk -in ca.key -out ca.pvk -nocrypt -topvk
  验证 openssl pkcs12 -clcerts -nokeys -in cert.p12 -out cert.pem
五 pfx到pem
c:\openssl-1.0.0d\out32\openssl  pkcs12  -in .\xinhr1309851947896.p12 -out .\xinhr.pem  -nodes&lt;/p&gt;

&lt;p&gt;六 从 PFX 格式文件中提取私钥格式文件 (.key) 
openssl pkcs12 -in mycert.pfx -nocerts -nodes -out mycert.key
七 转换 pem 到到 spc 
openssl crl2pkcs7 -nocrl -certfile venus.pem  -outform DER -out venus.spc
用 -outform -inform 指定 DER 还是 PAM 格式。例如：
openssl x509 -in Cert.pem -inform PEM -out cert.der -outform DER
八 PEM 到 PKCS#12 的转换，
openssl pkcs12 -export -in Cert.pem -out Cert.p12 -inkey key.pem
九 从 CRT format 到 PEM
openssl x509 -in input.crt -out input.der -outform DER
openssl x509 -in input.der -inform DER -out output.pem -outform PEM&lt;/p&gt;

&lt;p&gt;nginx安装SSL证书
生成CRS和密钥
方便一点的做法是使用在线的生成器，或者通过openSSL生成：&lt;/p&gt;

&lt;p&gt;openssl req -nodes -newkey rsa:2048 -nodes -keyout your_key_name.key -out your_csr_name.csr -subj “/C=GB/ST=London/L=London/O=your_server/OU=IT/CN=your_server”
将CRS提交给证书提供商
每个提供商步骤不太一样，讲讲COMODO的吧。
通过验证之后，会向你的邮箱发送一个压缩包，压缩包里包含四个文件&lt;/p&gt;

&lt;p&gt;AddTrustExternalCARoot.crt
COMODORSAAddTrustCA.crt
COMODORSADomainValidationSecureServerCA.crt
your_server.crt
合并证书
cat your_server.crt COMODORSADomainValidationSecureServerCA.crt COMODORSAAddTrustCA.crt AddTrustExternalCARoot.crt &amp;gt; your_server.pem 
上传证书并配置Nginx
站点服务器上只需要一开始生成的key和之后合并的pem文件，Nginx如下配置：&lt;/p&gt;

&lt;p&gt;server {
    ….
    ssl    on; 
    ssl_certificate         /etc/nginx/ssl/your_server.pem;
    ssl_certificate_key     /etc/nginx/ssl/your_key_name.key;
    …
}&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/13/%E5%B8%B8%E8%A7%81SSL%E8%AF%81%E4%B9%A6%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/13/%E5%B8%B8%E8%A7%81SSL%E8%AF%81%E4%B9%A6%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>php-curl-ext</title>
        <description>&lt;p&gt;php curl  扩展安装
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;方法一&lt;/p&gt;

&lt;p&gt;安装cURL&lt;/p&gt;

&lt;p&gt;wget http://curl.haxx.se/download/curl-7.17.1.tar.gz&lt;/p&gt;

&lt;p&gt;tar -zxf curl-7.17.1.tar.gz&lt;/p&gt;

&lt;p&gt;./configure –prefix=/usr/local/curl&lt;/p&gt;

&lt;p&gt;make &amp;amp; make install&lt;/p&gt;

&lt;p&gt;安装php&lt;/p&gt;

&lt;p&gt;只要打开开关 –with-curl=/usr/local/curl&lt;/p&gt;

&lt;p&gt;就可以了。&lt;/p&gt;

&lt;p&gt;这个扩展库还是非常棒，是fsockopen等等相关的有效的替代品。&lt;/p&gt;

&lt;p&gt;方法二&lt;/p&gt;

&lt;p&gt;进入安装原php的源码目录，&lt;/p&gt;

&lt;p&gt;cd ext&lt;/p&gt;

&lt;p&gt;cd curl&lt;/p&gt;

&lt;p&gt;phpize&lt;/p&gt;

&lt;p&gt;./configure –with-curl=DIR&lt;/p&gt;

&lt;p&gt;make &amp;amp; make install&lt;/p&gt;

&lt;p&gt;就会在PHPDIR/ext/curl/moudles/下生成curl.so的文件。&lt;/p&gt;

&lt;p&gt;复制curl.so文件到extensions的配置目录，修改php.ini就好了&lt;/p&gt;

&lt;p&gt;extension=curl.so&lt;/p&gt;

&lt;p&gt;第一种方法试了N遍一直在失败中，于是放弃。&lt;/p&gt;

&lt;p&gt;使用第二种方法安装，&lt;/p&gt;

&lt;p&gt;phpize提示找不到，其实命令在/usr/local/php/bin/目标下:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$/usr/local/php/bin/phpize
./configure --with-curl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DIR需要指定php的配置路径，应该如下：
$./configure --with-php-config&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/php/bin/php-config --with-curl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DIR&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注：上面的资料中错把–with-php-config写成了–with-php-php-config&lt;/p&gt;

&lt;p&gt;然后就是编译安装：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;$ make
$ make install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;到这里会提示生成文件curl.so的路径： /usr/local/php/lib/php/extensions/no-debug-non-zts-20060613/&lt;/p&gt;

&lt;p&gt;进入到这个路径下，复制curl到extension_dir目录下(本目录路径可以看phpinfo可是直接看php.int)，&lt;/p&gt;

&lt;p&gt;修改php.ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;curl.so
$ /usr/local/php/bin/php -m&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果看到有curl项表示成功。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;git clone https://github.com/xiazemin/php-src.git
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; php-src/ext/curl/
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt; /usr/local/bin/phpize
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;./configure   --with-curl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /usr/local/Cellar/php70/7.0.8/
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;configure: error: invalid value of canonical build
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt; ./configure   --with-curl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/etc/php/7.0
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt; make &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; make install
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt; cp modules/curl.so  /usr/local/Cellar/php70/7.0.8/lib/php/extensions/no-debug-non-zts-20151012/curl.so
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt; vi /usr/local/etc/php/7.0/php.ini
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt; Warning: Module &lt;span class=&quot;s1&quot;&gt;&amp;#39;curl&amp;#39;&lt;/span&gt; already loaded in Unknown on line &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ibtool: link: `xhprof.lo’ is not a valid libtool object
解决方法
用命令
make clean
然后在重新执行命令&lt;/p&gt;

</description>
        <pubDate>Wed, 13 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/13/php-curl-ext.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/13/php-curl-ext.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>curl-https-php</title>
        <description>&lt;p&gt;php使用curl访问https返回无结果的问题
&lt;!-- more --&gt;
用curl发起https请求的时候报错：“SSL certificate problem, verify that the CA cert is OK. Details: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed”
很明显，验证证书的时候出现了问题。&lt;/p&gt;

&lt;p&gt;使用curl如果想发起的https请求正常的话有2种做法：&lt;/p&gt;

&lt;p&gt;方法一、设定为不验证证书和host。&lt;/p&gt;

&lt;p&gt;在执行curl_exec()之前。设置option&lt;/p&gt;

&lt;p&gt;$ch = curl_init();&lt;/p&gt;

&lt;p&gt;……&lt;/p&gt;

&lt;p&gt;curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);&lt;/p&gt;

&lt;p&gt;方法二、设定一个正确的证书。&lt;/p&gt;

&lt;p&gt;本地ssl判别证书太旧，导致链接报错ssl证书不正确。&lt;/p&gt;

&lt;p&gt;我们需要下载新的ssl 本地判别文件&lt;/p&gt;

&lt;p&gt;http://curl.haxx.se/ca/cacert.pem&lt;/p&gt;

&lt;p&gt;放到 程序文件目录&lt;/p&gt;

&lt;p&gt;curl 增加下面的配置&lt;/p&gt;

&lt;p&gt;curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,true); ;
curl_setopt($ch,CURLOPT_CAINFO,dirname(&lt;strong&gt;FILE&lt;/strong&gt;).’/cacert.pem’);&lt;/p&gt;

&lt;p&gt;$curl http://curl.haxx.se/ca/cacert.pem -o cacert.pem&lt;/p&gt;

&lt;p&gt;ErrnoSSL: certificate verification failed&lt;/p&gt;

&lt;p&gt;英文mac本地安装了多版本的php，php curl 扩展版本不匹配
旧版本的cur 默认不支持https 需要重新编译php curl 扩展&lt;/p&gt;

&lt;p&gt;certificate verification failed (result: 5)
 vi cacert.pem 发现是空
 curl-config –ca
 也为空
 下载证书
 curl_setopt($ch,CURLOPT_CAINFO,dirname(&lt;strong&gt;FILE&lt;/strong&gt;).’/cacert.pem’);
 或者
 /.ssh
sudo wget http://curl.haxx.se/ca/cacert.pem
export CURL_CA_BUNDLE=~/.ssh/cacert.pem
发现
$url=’https://yq.aliyun.com/ziliao/157066’;
成功，但是
$url=”https://www.baidu.com”;
失败&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/13/curl-https-php.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/13/curl-https-php.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>php-spider</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;$composer install&lt;/p&gt;

&lt;p&gt;$php example/example_simple.php&lt;/p&gt;

&lt;p&gt;ENQUEUED:  1
  SKIPPED:   0
  FAILED:    0
  PERSISTED:    1&lt;/p&gt;

&lt;p&gt;DOWNLOADED RESOURCES:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;DMOZ - The Directory of the Web&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考文档：
 https://doc.phpspider.org/demo-start.html&lt;/p&gt;

&lt;p&gt;$git clone https://github.com/xiazemin/phpspider.git&lt;/p&gt;

&lt;p&gt;$php qiushibaike_task.php&lt;/p&gt;

&lt;p&gt;2017-09-12 10:32:58 [error] Multitasking needs Redis support, The redis extension was not found&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$php -r ‘echo phpinfo();’&lt;/td&gt;
      &lt;td&gt;grep ini&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;$vi /usr/local/etc/php/7.0/php.ini&lt;/p&gt;

&lt;p&gt;;extension_dir = “/usr/local/Cellar/php70/7.0.8/lib/php/extensions/no-debug-non-zts-20151012/”
extension=/usr/local/Cellar/php70/7.0.8/lib/php/extensions/no-debug-non-zts-20151012/redis.so
;extension_dir = “/usr/local/Cellar/php70/7.0.15_8/lib/php/extensions/no-debug-non-zts-20151012/”
extension=/usr/local/Cellar/php70/7.0.15_8/lib/php/extensions/no-debug-non-zts-20151012/test.so
extension=/usr/local/Cellar/php70/7.0.15_8/lib/php/extensions/no-debug-non-zts-20151012/vld.so&lt;/p&gt;

&lt;p&gt;php ini   extension_dir  会覆盖&lt;/p&gt;

&lt;p&gt;Warning: PHP Startup: Unable to load dynamic library ‘ext/php_mysqli.dll’ - dlopen(ext/php_mysqli.dll, 9): image not found in Unknown on line 0&lt;/p&gt;

&lt;p&gt;vi /usr/local/etc/php/7.0/php.ini
;extension=php_mysqli.dll&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$php -m&lt;/td&gt;
      &lt;td&gt;grep mysql&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;$which redis-server
/usr/local/bin/redis-server&lt;/p&gt;

&lt;p&gt;$redis-server &amp;amp;&lt;/p&gt;

&lt;p&gt;$php qiushibaike_task.php&lt;/p&gt;

&lt;p&gt;—————————– PHPSPIDER —————————–
PHPSpider version:2.0.7          PHP version:7.0.15
start time:2017-09-12 12:03:38   run 0 days 0 hours 0 minutes
spider name: 糗事百科测试样例
server id: 1
task number: 3
load average: 2.13, 2.13, 2.09
document: https://doc.phpspider.org
——————————- TASKS ——————————-
taskid    taskpid   mem       collect succ   collect fail   speed
1         21935     2MB       0              1              3.3/s
——————————- SERVER ——————————
server    tasknum   mem       collect succ   collect fail   speed
1         3         2MB       0              1              3.3/s
————————— COLLECT STATUS ————————–
find pages      queue         collected      fields         depth
1               0             1              0              0
 ———————————————————————
Press Ctrl-C to quit. Start success.&lt;/p&gt;

</description>
        <pubDate>Tue, 12 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/12/php-spider.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/12/php-spider.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>php怎么判断函数，类，类方法是不是存在</title>
        <description>&lt;!-- more --&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;（1）php判断系统函数或自己写的函数是否存在&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;bool function_exists ( string $function_name ) 判断函数是否已经定义，例如：&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;if(function_exists(&amp;#39;curl_init&amp;#39;)){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    curl_init();&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}else{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    echo &amp;#39;not function curl_init&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;（2）php判断类是否存在&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;bool class_exists ( string $class_name [, bool $autoload = true ] ) 检查一个类是否已经定义，一定以返回true，否则返回false，例如：&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;if(class_exists(&amp;#39;MySQL&amp;#39;)){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    $myclass=new MySQL();&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;（3）php判断类里面的某个方法是否已经定义&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;bool method_exists ( mixed $object , string $method_name ) 检查类的方法是否存在，例如：&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;$directory=new Directory;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;if(!method_exists($directory,&amp;#39;read&amp;#39;)){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    echo &amp;#39;未定义read方法！&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Tue, 12 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/12/php-function.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/12/php-function.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>composer-source</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;1、安装
curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer
如果上面出现问题
可以这样
curl -sS https://getcomposer.org/installer | php 
mv composer.phar /usr/local/bin/composer 
如果curl下载较慢,一直卡在downloading
可以这样
wget https://getcomposer.org/installer
php installer
mv composer.phar /usr/local/bin/composer
2、配置国内源&lt;/p&gt;

&lt;p&gt;方法一： 修改 composer 的全局配置文件（推荐方式）
 打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：
composer config -g repo.packagist composer https://packagist.phpcomposer.com
方法二： 修改当前项目的 composer.json 配置文件：
打开命令行窗口（windows用户）或控制台（Linux、Mac 用户），进入你的项目的根目录（也就是 composer.json文件所在目录），执行如下命令：
composer config repo.packagist composer https://packagist.phpcomposer.com
上述命令将会在当前项目中的 composer.json 文件的末尾自动添加镜像的配置信息&lt;/p&gt;

&lt;p&gt;$  composer config repo.packagist composer https://packagist.phpcomposer.com&lt;/p&gt;

&lt;p&gt;$vi composer.json&lt;/p&gt;

&lt;p&gt;“repositories”: {
        “packagist”: {
            “type”: “composer”,
            “url”: “https://packagist.phpcomposer.com”
        }
    }
}&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/12/composer-source.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/12/composer-source.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>php-doc</title>
        <description>&lt;p&gt;老的版本是phpdoc，从1.3.0开始，更名为phpDocumentor&lt;/p&gt;

&lt;p&gt;PHP Documentor是PEAR下面的一个模块，用来生成文档。PHP Documentor扫描指定目录下面的php源代码，扫描其中的关键字，截取需要分析的注释，然后分析注释中的专用的tag，生成html文件，接着根据已经分析完的类和模块的信息，建立相应的索引，生成html文件
&lt;!-- more --&gt;
如果没有安装http://pear.php.net/go-pear，文件另存为一下。命令行下php go-pear.php，就可以安装了。 我是用yum安装的php，安装的时候，pear已经安装了。pear安装好后，我可以通过pear install phpDocumentor来安装phpdoc&lt;/p&gt;

&lt;p&gt;$curl -o go-pear.php http://pear.php.net/go-pear&lt;/p&gt;

&lt;p&gt;$php go-pear.php&lt;/p&gt;

&lt;p&gt;Sorry!  Your PHP version is too new (7.0.15) for this go-pear.
Instead use http://pear.php.net/go-pear.phar for a more stable and current
version of go-pear, more suited to your PHP version.&lt;/p&gt;

&lt;p&gt;$curl -o go-pear.phar http://pear.php.net/go-pear.phar&lt;/p&gt;

&lt;p&gt;$php go-pear.phar&lt;/p&gt;

&lt;p&gt;$vi ~/.bashrc
export PATH=”/Users/didi/pear/bin:$PATH”&lt;/p&gt;

&lt;p&gt;$pear help&lt;/p&gt;

&lt;p&gt;$pear install phpDocumentor&lt;/p&gt;

&lt;p&gt;$phpdoc -h&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;标记	用途	描述
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;@abstract	 	抽象类的变量和方法
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;@access	public, private or protected	文档的访问、使用权限. @access private 表明这个文档是被保护的。
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;@author	张三 &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;zhangsan&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;163&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;	文档作者
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;@copyright	名称 时间	文档版权信息
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;@deprecated	version	文档中被废除的方法
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;@deprec	 	同 @deprecated
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;@example	/path/to/example	文档的外部保存的示例文件的位置。
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;@exception	 	文档中方法抛出的异常，也可参照 @throws.
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;@global	类型：$globalvarname	文档中的全局变量及有关的方法和函数
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;@ignore	 	忽略文档中指定的关键字
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;@internal	 	开发团队内部信息
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;@link	URL	类似于license 但还可以通过link找到文档中的更多个详细的信息
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;@name	变量别名	为某个变量指定别名
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;@magic	 	phpdoc.de compatibility
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;@package	封装包的名称	一组相关类、函数封装的包名称
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;@param	如 [$username] 用户名	变量含义注释
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;@return	如 返回bool	函数返回结果描述，一般不用在void（空返回结果的）的函数中
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;@see	如 Class Login（）	文件关联的任何元素（全局变量，包括，页面，类，函数，定义，方法，变量）。
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;@since	version	记录什么时候对文档的哪些部分进行了更改
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;@static	 	记录静态类、方法
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;@staticvar	 	在类、函数中使用的静态变量
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;@subpackage	 	子版本
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;@throws	 	某一方法抛出的异常
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;@todo	 	表示文件未完成或者要完善的地方
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;@var	type	文档中的变量及其类型
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;@version	 	文档、类、函数的版本信息&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2.使用
解压出来后，终端：phpdoc -h   可以查看所有的指令，选几个重要的：
-d     源php文件的路径
-t      生成文档后文档的存放路径（最好为其单独创建一个文件夹）
-dn   包的名字（默认为default，最好改成项目的名字）
-dc   目录的名字（默认为default，最好改成项目的名字）
-ti     文档标题  这是首页上的大标题
-o     生成的文档的模板格式，这个应该有很多种可以选择，不过我只选择：HTML:Smarty:PHP（感觉比较美观）&lt;/p&gt;

&lt;p&gt;3.
注释规则（其实和大多数的文档生成工具是差不多的，如javadoc，doxygen，jsdoc等）
下面的部分整理自网络：
注意：phpDoc和其他的自动化文档生成工具不一样，不可以在注释中添加html代码！
1.
每个php文件开头：
/**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Common base class of all phpdoc classes （简述，用在索引列表中，应尽量只占一行）
 *&lt;/li&gt;
  &lt;li&gt;As a kind of common base class PhpdocObject holds&lt;/li&gt;
  &lt;li&gt;configuration values (e.g. error handling) and debugging&lt;/li&gt;
  &lt;li&gt;methods (e.g. introspection()). It does not have a constructor,&lt;/li&gt;
  &lt;li&gt;so you can always inheritig Phpdoc classes from this&lt;/li&gt;
  &lt;li&gt;class without any trouble. （详细的功能描述，可以多行）
 *&lt;/li&gt;
  &lt;li&gt;@author   Ulf Wendel&lt;/li&gt;
  &lt;li&gt;@version  $Id: PhpdocObject.php,v 1.3 2001/02/18 15:29:29 uw Exp $&lt;/li&gt;
  &lt;li&gt;@package  PHPDoc （文档标记）（你可以将不同的模块放在不同的package里，生成文档的时候会自 * 动生成一个包列表，可以在文档的左上角选择不同的包查看不同的模块文档）
 */&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一段phpDoc的规范化注释：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;生成文档：
规范的注释写好了，下面要真正生成文档了：
举例：
phpdoc -d ./a -t ./b -dn abc -dc def -ti xyz -o HTML:Smarty:PHP
上面的意思是：为./a下的php文件生成文档，存放在./b目录下，包名是abc，目录名是def，标题是xyz，以HTML:Smarty:PHP为模板。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 11 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/11/php-doc.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/11/php-doc.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>oauth-github-api</title>
        <description>&lt;!-- more --&gt;

&lt;p&gt;According to the documentation: http://developer.github.com/v3/#cross-origin-resource-sharing&lt;/p&gt;

&lt;p&gt;Any domain that is registered as an OAuth Application is accepted.
To register you application go to: https://github.com/settings/applications&lt;/p&gt;

&lt;p&gt;You need to be posting from the same domain that your application is registered on. If you are trying to test locally you may need to modify your hosts file and run your server on port 80.&lt;/p&gt;

&lt;p&gt;$curl -i https://api.github.com -H “Origin: https://xiazemin.github.io/MyBlog/jekyll/2017/09/09/github-api.html”
HTTP/1.1 200 OK
Date: Sun, 10 Sep 2017 14:01:04 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2165
Server: GitHub.com
Status: 200 OK
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 58
X-RateLimit-Reset: 1505055460
Cache-Control: public, max-age=60, s-maxage=60
Vary: Accept
ETag: “7dc470913f1fe9bb6c7355b50a0737bc”
X-GitHub-Media-Type: github.v3; format=json
Access-Control-Expose-Headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Access-Control-Allow-Origin: *
Content-Security-Policy: default-src ‘none’
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Content-Type-Options: nosniff&lt;/p&gt;

&lt;p&gt;https://developer.github.com/v3/#cross-origin-resource-sharing&lt;/p&gt;

&lt;p&gt;https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-authorization-options-for-oauth-apps/&lt;/p&gt;

&lt;p&gt;https://developer.github.com/v3/#authentication
https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization
http://www.ituring.com.cn/book/tupubarticle/11824&lt;/p&gt;

&lt;p&gt;原因：
https://github.com/     不允许跨于
https://api.github.com/允许跨域
http://www.membrane-soa.org/service-proxy-doc/4.2/oauth2-github.htm&lt;/p&gt;

&lt;p&gt;通过代理解决跨域问题：
$ curl -i https://gh-oauth.imsun.net -d ‘client_id=981ba8c916c262631ea0&amp;amp;client_secret=a52260ef92de69011ccd1cf355b973ef11d6da0e&amp;amp;code=212ab8ead2246b853e75’&lt;/p&gt;

&lt;p&gt;HTTP/1.1 200 OK
x-powered-by: Express
access-control-allow-origin: *
access-control-allow-headers: Origin, X-Requested-With, Content-Type, Accept, Authorization
content-type: application/json; charset=utf-8
content-length: 171
etag: W/”ab-oF8ktyaUXM1tq3Z8pnAn/45npKk”
date: Sun, 10 Sep 2017 15:14:07 GMT
connection: close
Vary: Accept-Encoding&lt;/p&gt;

&lt;p&gt;{“error”:”bad_verification_code”,”error_description”:”The code passed is incorrect or expired.”,”error_uri”:”https://developer.github.com/v3/oauth/#bad-verification-code”}&lt;/p&gt;

&lt;p&gt;XMLHttpRequest cannot load https://gh-oauth.imsun.net/?client_id=981ba8c916c262631ea0&amp;amp;client_secret=a52260ef92de69011ccd1cf355b973ef11d6da0e&amp;amp;code=212ab8ead2246b853e75&amp;amp;code=e06fe81abe307693bd63. The value of the ‘Access-Control-Allow-Origin’ header in the response must not be the wildcard ‘*’ when the request’s credentials mode is ‘include’. Origin ‘https://xiazemin.github.io’ is therefore not allowed access. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.&lt;/p&gt;

&lt;p&gt;xhrFields:{
        withCredentials:true
    },
改为false&lt;/p&gt;

&lt;p&gt;$curl -i https://gh-oauth.imsun.net/ -d ‘client_id=981ba8c916c262631ea0&amp;amp;client_secret=a52260ef92de69011ccd1cf355b973ef11d6da0e&amp;amp;code=2a519af00b0c087c9467’
HTTP/1.1 200 OK
x-powered-by: Express
access-control-allow-origin: *
access-control-allow-headers: Origin, X-Requested-With, Content-Type, Accept, Authorization
content-type: application/json; charset=utf-8
content-length: 103
etag: W/”67-PeAQcsRx2WA+cub4aPbs/mJhXYo”
date: Mon, 11 Sep 2017 02:07:43 GMT
connection: close
Vary: Accept-Encoding&lt;/p&gt;

&lt;p&gt;{“access_token”:”41294d53c2f9925b28c979dc5b530196b0d5c84c”,”token_type”:”bearer”,”scope”:”public_repo”}&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/10/oauth-github-api.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/10/oauth-github-api.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>http-head 四种常见的 POST 提交数据方式</title>
        <description>&lt;!-- more --&gt;

&lt;p&gt;HTTP/1.1 协议规定的 HTTP 请求方法有 OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE、CONNECT 这几种。其中 POST 一般用来向服务端提交数据，本文主要讨论 POST 提交数据的几种方式。&lt;/p&gt;

&lt;p&gt;我们知道，HTTP 协议是以 ASCII 码传输，建立在 TCP/IP 协议之上的应用层规范。规范把 HTTP 请求分为三个部分：状态行、请求头、消息主体。类似于下面这样：&lt;/p&gt;

&lt;method&gt; &lt;request-url&gt; &lt;version&gt;
&lt;headers&gt;
 
&lt;entity-body&gt;&lt;/entity-body&gt;&lt;/headers&gt;&lt;/version&gt;&lt;/request-url&gt;&lt;/method&gt;
&lt;p&gt;协议规定 POST 提交的数据必须放在消息主体（entity-body）中，但协议并没有规定数据必须使用什么编码方式。实际上，开发者完全可以自己决定消息主体的格式，只要最后发送的 HTTP 请求满足上面的格式就可以。&lt;/p&gt;

&lt;p&gt;但是，数据发送出去，还要服务端解析成功才有意义。一般服务端语言如 php、python 等，以及它们的 framework，都内置了自动解析常见数据格式的功能。服务端通常是根据请求头（headers）中的 Content-Type 字段来获知请求中的消息主体是用何种方式编码，再对主体进行解析。所以说到 POST 提交数据方案，包含了 Content-Type 和消息主体编码方式两部分。下面就正式开始介绍它们。&lt;/p&gt;

&lt;p&gt;application/x-www-form-urlencoded
这应该是最常见的 POST 提交数据的方式了。浏览器的原生 form 表单，如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。请求类似于下面这样（无关的请求头在本文中都省略掉了）：&lt;/p&gt;

&lt;p&gt;?
POST http://www.example.com HTTP/1.1
Content-Type: application/x-www-form-urlencoded;charset=utf-8&lt;/p&gt;

&lt;p&gt;title=test&amp;amp;sub%5B%5D=1&amp;amp;sub%5B%5D=2&amp;amp;sub%5B%5D=3
首先，Content-Type 被指定为 application/x-www-form-urlencoded；其次，提交的数据按照 key1=val1&amp;amp;key2=val2 的方式进行编码，key 和 val 都进行了 URL 转码。大部分服务端语言都对这种方式有很好的支持。例如 PHP 中，$_POST[‘title’] 可以获取到 title 的值，$_POST[‘sub’] 可以得到 sub 数组。&lt;/p&gt;

&lt;p&gt;很多时候，我们用 Ajax 提交数据时，也是使用这种方式。例如 JQuery 和 QWrap 的 Ajax，Content-Type 默认值都是「application/x-www-form-urlencoded;charset=utf-8」。&lt;/p&gt;

&lt;p&gt;multipart/form-data
这又是一个常见的 POST 数据提交的方式。我们使用表单上传文件时，必须让 form 的 enctyped 等于这个值。直接来看一个请求示例：&lt;/p&gt;

&lt;p&gt;?
POST http://www.example.com HTTP/1.1
Content-Type:multipart/form-data; boundary=—-WebKitFormBoundaryrGKCBY7qhFd3TrwA&lt;/p&gt;

&lt;p&gt;——WebKitFormBoundaryrGKCBY7qhFd3TrwA
Content-Disposition: form-data; name=”text”&lt;/p&gt;

&lt;p&gt;title
——WebKitFormBoundaryrGKCBY7qhFd3TrwA
Content-Disposition: form-data; name=”file”; filename=”chrome.png”
Content-Type: image/png&lt;/p&gt;

&lt;p&gt;PNG … content of chrome.png …
——WebKitFormBoundaryrGKCBY7qhFd3TrwA–
这个例子稍微复杂点。首先生成了一个 boundary 用于分割不同的字段，为了避免与正文内容重复，boundary 很长很复杂。然后 Content-Type 里指明了数据是以 mutipart/form-data 来编码，本次请求的 boundary 是什么内容。消息主体里按照字段个数又分为多个结构类似的部分，每部分都是以 –boundary 开始，紧接着内容描述信息，然后是回车，最后是字段具体内容（文本或二进制）。如果传输的是文件，还要包含文件名和文件类型信息。消息主体最后以 –boundary– 标示结束。关于 mutipart/form-data 的详细定义，请前往 rfc1867 查看。&lt;/p&gt;

&lt;p&gt;这种方式一般用来上传文件，各大服务端语言对它也有着良好的支持。&lt;/p&gt;

&lt;p&gt;上面提到的这两种 POST 数据的方式，都是浏览器原生支持的，而且现阶段原生 form 表单也只支持这两种方式。但是随着越来越多的 Web 站点，尤其是 WebApp，全部使用 Ajax 进行数据交互之后，我们完全可以定义新的数据提交方式，给开发带来更多便利。&lt;/p&gt;

&lt;p&gt;application/json
application/json 这个 Content-Type 作为响应头大家肯定不陌生。实际上，现在越来越多的人把它作为请求头，用来告诉服务端消息主体是序列化后的 JSON 字符串。由于 JSON 规范的流行，除了低版本 IE 之外的各大浏览器都原生支持 JSON.stringify，服务端语言也都有处理 JSON 的函数，使用 JSON 不会遇上什么麻烦。&lt;/p&gt;

&lt;p&gt;JSON 格式支持比键值对复杂得多的结构化数据，这一点也很有用。记得我几年前做一个项目时，需要提交的数据层次非常深，我就是把数据 JSON 序列化之后来提交的。不过当时我是把 JSON 字符串作为 val，仍然放在键值对里，以 x-www-form-urlencoded 方式提交。&lt;/p&gt;

&lt;p&gt;Google 的 AngularJS 中的 Ajax 功能，默认就是提交 JSON 字符串。例如下面这段代码：&lt;/p&gt;

&lt;p&gt;var data = {‘title’:’test’, ‘sub’ : [1,2,3]};
$http.post(url, data).success(function(result) {
    …
});
最终发送的请求是：&lt;/p&gt;

&lt;p&gt;POST http://www.example.com HTTP/1.1
Content-Type: application/json;charset=utf-8&lt;/p&gt;

&lt;p&gt;{“title”:”test”,”sub”:[1,2,3]}
这种方案，可以方便的提交复杂的结构化数据，特别适合 RESTful 的接口。各大抓包工具如 Chrome 自带的开发者工具、Firebug、Fiddler，都会以树形结构展示 JSON 数据，非常友好。但也有些服务端语言还没有支持这种方式，例如 php 就无法通过 $_POST 对象从上面的请求中获得内容。这时候，需要自己动手处理下：在请求头中 Content-Type 为 application/json 时，从 php://input 里获得原始输入流，再 json_decode 成对象。一些 php 框架已经开始这么做了&lt;/p&gt;

&lt;p&gt;setRequestHeader 设置请求头
设置请求头前需先调用open方法打开一个url
xhr.open(“post”, “/save”);
设置数据格式
发送json格式数据
xhr.setRequestHeader(“Content-type”,”application/json; charset=utf-8”);
发送表单数据
xhr.setRequestHeader(“Content-type”, “application/x-www-form-urlencoded; charset=utf-8”);
发送纯文本
不指定Content-type时，此是默认值值
xhr.setRequestHeader(“Content-type”, “text/plain; charset=utf-8”);
发送html文本
xhr.setRequestHeader(“Content-type”, “text/html; charset=utf-8”);
编码可带可不带
// 不带字符编码写法
xhr.setRequestHeader(“Content-type”, “application/json”);
值对大小写不敏感&lt;/p&gt;

&lt;p&gt;xhr.setRequestHeader(“Content-type”,”Application/JSON; charset=utf-8”);
虽然如此，但还是都保持小写&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/10/http-head.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/10/http-head.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>javascript 实现客户端访问次数统计</title>
        <description>&lt;p&gt;原理，通过cookie存储访问计数
&lt;!-- more --&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expires&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curCookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expires&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;; expires=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expires&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toGMTString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;; path=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;; domain=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;; secure&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;caution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;                &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curCookie&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;confirm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Cookie exceeds 4KB and will be cut!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;                        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curCookie&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookieStartIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookieStartIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookieEndIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookieStartIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookieEndIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;                &lt;span class=&quot;nx&quot;&gt;cookieEndIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookieStartIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookieEndIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deleteCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;                &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;; path=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;; domain=&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;                &lt;span class=&quot;s2&quot;&gt;&amp;quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33 &lt;/span&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34 &lt;/span&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skew&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skew&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36 &lt;/span&gt;                &lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fixDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;365&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;counter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;46 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;counter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;您的第&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;次访问！&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Sat, 09 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/09/statics.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/09/statics.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
