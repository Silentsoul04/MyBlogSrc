<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>泽民博客</title>
    <description>夏泽民的个人主页，学习笔记。</description>
    <link>https://xiazemin.github.io/MyBlog/</link>
    <atom:link href="https://xiazemin.github.io/MyBlog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 20 Sep 2017 17:44:56 +0800</pubDate>
    <lastBuildDate>Wed, 20 Sep 2017 17:44:56 +0800</lastBuildDate>
    <generator>Jekyll v3.6.0.pre.beta1</generator>
    
      <item>
        <title>mysqldump</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;mysqldump  -P端口  -hIP -u用户名 -p密码 表名 库名 &amp;gt; 目标文件.sql&lt;/p&gt;

&lt;p&gt;mysqldump: [Warning] Using a password on the command line interface can be insecure.&lt;/p&gt;

&lt;p&gt;mysqldump  -P端口  -hIP -u用户名 -p 表名 库名 &amp;gt; 目标文件.sql&lt;/p&gt;

&lt;p&gt;然后输入密码&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/web/2017/09/20/mysqldump.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/web/2017/09/20/mysqldump.html</guid>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>mysql-time</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;MySQL 获得当前日期时间 函数
获得当前日期+时间（date + time）函数：now()&lt;/p&gt;

&lt;p&gt;复制代码
mysql&amp;gt; select now();&lt;/p&gt;

&lt;p&gt;+———————+
| now() |
+———————+
| 2008-08-08 22:20:46 |
+———————+
复制代码
获得当前日期+时间（date + time）函数：sysdate()
sysdate() 日期时间函数跟 now() 类似，不同之处在于：now() 在执行开始时值就得到了， sysdate() 在函数执行时动态得到值。看下面的例子就明白了：&lt;/p&gt;

&lt;p&gt;复制代码
mysql&amp;gt; select now(), sleep(3), now();&lt;/p&gt;

&lt;p&gt;+———————+———-+———————+
| now() | sleep(3) | now() |
+———————+———-+———————+
| 2008-08-08 22:28:21 | 0 | 2008-08-08 22:28:21 |
+———————+———-+———————+
复制代码
sysdate() 日期时间函数，一般情况下很少用到。&lt;/p&gt;

&lt;p&gt;MySQL 获得当前时间戳函数：current_timestamp, current_timestamp()&lt;/p&gt;

&lt;p&gt;复制代码
mysql&amp;gt; select current_timestamp, current_timestamp();&lt;/p&gt;

&lt;p&gt;+———————+———————+
| current_timestamp | current_timestamp() |
+———————+———————+
| 2008-08-09 23:22:24 | 2008-08-09 23:22:24 |
+———————+———————+
复制代码&lt;/p&gt;

&lt;p&gt;MySQL 日期转换函数、时间转换函数
MySQL Date/Time to Str（日期/时间转换为字符串）函数：date_format(date,format), time_format(time,format)&lt;/p&gt;

&lt;p&gt;复制代码
mysql&amp;gt; select date_format(‘2008-08-08 22:23:01’, ‘%Y%m%d%H%i%s’);&lt;/p&gt;

&lt;p&gt;+—————————————————-+
| date_format(‘2008-08-08 22:23:01’, ‘%Y%m%d%H%i%s’) |
+—————————————————-+
| 20080808222301 |
+—————————————————-+
复制代码
MySQL 日期、时间转换函数：date_format(date,format), time_format(time,format) 能够把一个日期/时间转换成各种各样的字符串格式。它是 str_to_date(str,format) 函数的 一个逆转换。&lt;/p&gt;

&lt;p&gt;MySQL Str to Date （字符串转换为日期）函数：str_to_date(str, format)&lt;/p&gt;

&lt;p&gt;select str_to_date(‘08/09/2008’, ‘%m/%d/%Y’); – 2008-08-09
select str_to_date(‘08/09/08’ , ‘%m/%d/%y’); – 2008-08-09
select str_to_date(‘08.09.2008’, ‘%m.%d.%Y’); – 2008-08-09
select str_to_date(‘08:09:30’, ‘%h:%i:%s’); – 08:09:30
select str_to_date(‘08.09.2008 08:09:30’, ‘%m.%d.%Y %h:%i:%s’); – 2008-08-09 08:09:30
可以看到，str_to_date(str,format) 转换函数，可以把一些杂乱无章的字符串转换为日期格式。另外，它也可以转换为时间。“format” 可以参看 MySQL 手册。&lt;/p&gt;

&lt;p&gt;MySQL （日期、天数）转换函数：to_days(date), from_days(days)&lt;/p&gt;

&lt;p&gt;select to_days(‘0000-00-00’); – 0
select to_days(‘2008-08-08’); – 733627&lt;/p&gt;

&lt;p&gt;MySQL （时间、秒）转换函数：time_to_sec(time), sec_to_time(seconds)&lt;/p&gt;

&lt;p&gt;select time_to_sec(‘01:00:05’); – 3605
select sec_to_time(3605); – ‘01:00:05’&lt;/p&gt;

&lt;p&gt;MySQL 拼凑日期、时间函数：makdedate(year,dayofyear), maketime(hour,minute,second)&lt;/p&gt;

&lt;p&gt;select makedate(2001,31); – ‘2001-01-31’
select makedate(2001,32); – ‘2001-02-01’
select maketime(12,15,30); – ‘12:15:30’&lt;/p&gt;

&lt;p&gt;MySQL （Unix 时间戳、日期）转换函数&lt;/p&gt;

&lt;p&gt;unix_timestamp(),
unix_timestamp(date),
from_unixtime(unix_timestamp),
from_unixtime(unix_timestamp,format)&lt;/p&gt;

&lt;p&gt;下面是示例：&lt;/p&gt;

&lt;p&gt;复制代码
select unix_timestamp(); – 1218290027
select unix_timestamp(‘2008-08-08’); – 1218124800
select unix_timestamp(‘2008-08-08 12:30:00’); – 1218169800&lt;/p&gt;

&lt;p&gt;select from_unixtime(1218290027); – ‘2008-08-09 21:53:47’
select from_unixtime(1218124800); – ‘2008-08-08 00:00:00’
select from_unixtime(1218169800); – ‘2008-08-08 12:30:00’&lt;/p&gt;

&lt;p&gt;select from_unixtime(1218169800, ‘%Y %D %M %h:%i:%s %x’); – ‘2008 8th August 12:30:00 2008’
复制代码&lt;/p&gt;

&lt;p&gt;MySQL 日期时间计算函数&lt;/p&gt;

&lt;p&gt;MySQL 为日期增加一个时间间隔：date_add()&lt;/p&gt;

&lt;p&gt;复制代码
set @dt = now();&lt;/p&gt;

&lt;p&gt;select date_add(@dt, interval 1 day); – add 1 day
select date_add(@dt, interval 1 hour); – add 1 hour
select date_add(@dt, interval 1 minute); – …
select date_add(@dt, interval 1 second);
select date_add(@dt, interval 1 microsecond);
select date_add(@dt, interval 1 week);
select date_add(@dt, interval 1 month);
select date_add(@dt, interval 1 quarter);
select date_add(@dt, interval 1 year);&lt;/p&gt;

&lt;p&gt;select date_add(@dt, interval -1 day); – sub 1 day
复制代码&lt;/p&gt;

&lt;p&gt;MySQL adddate(), addtime()函数，可以用 date_add() 来替代。下面是 date_add() 实现 addtime() 功能示例：&lt;/p&gt;

&lt;p&gt;复制代码
mysql&amp;gt; set @dt = ‘2008-08-09 12:12:33’;&lt;/p&gt;

&lt;p&gt;mysql&amp;gt;
mysql&amp;gt; select date_add(@dt, interval ‘01:15:30’ hour_second);&lt;/p&gt;

&lt;p&gt;+————————————————+
| date_add(@dt, interval ‘01:15:30’ hour_second) |
+————————————————+
| 2008-08-09 13:28:03 |
+————————————————+&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; select date_add(@dt, interval ‘1 01:15:30’ day_second);&lt;/p&gt;

&lt;p&gt;+————————————————-+
| date_add(@dt, interval ‘1 01:15:30’ day_second) |
+————————————————-+
| 2008-08-10 13:28:03 |
+————————————————-+
复制代码&lt;/p&gt;

&lt;p&gt;MySQL 为日期减去一个时间间隔：date_sub()&lt;/p&gt;

&lt;p&gt;复制代码
mysql&amp;gt; select date_sub(‘1998-01-01 00:00:00’, interval ‘1 1:1:1’ day_second);&lt;/p&gt;

&lt;p&gt;+—————————————————————-+
| date_sub(‘1998-01-01 00:00:00’, interval ‘1 1:1:1’ day_second) |
+—————————————————————-+
| 1997-12-30 22:58:59 |
+—————————————————————-+
复制代码
MySQL date_sub() 日期时间函数 和 date_add() 用法一致，不再赘述。&lt;/p&gt;

&lt;p&gt;MySQL 日期、时间相减函数：datediff(date1,date2), timediff(time1,time2)&lt;/p&gt;

&lt;p&gt;MySQL datediff(date1,date2)：两个日期相减 date1 - date2，返回天数。
select datediff(‘2008-08-08’, ‘2008-08-01’); – 7
select datediff(‘2008-08-01’, ‘2008-08-08’); – -7
MySQL timediff(time1,time2)：两个日期相减 time1 - time2，返回 time 差值。&lt;/p&gt;

&lt;p&gt;select timediff(‘2008-08-08 08:08:08’, ‘2008-08-08 00:00:00’); – 08:08:08
select timediff(‘08:08:08’, ‘00:00:00’); – 08:08:08
注意：timediff(time1,time2) 函数的两个参数类型必须相同。&lt;/p&gt;

&lt;p&gt;MySQL 时间戳（timestamp）转换、增、减函数：&lt;/p&gt;

&lt;p&gt;timestamp(date) – date to timestamp
timestamp(dt,time) – dt + time
timestampadd(unit,interval,datetime_expr) –
timestampdiff(unit,datetime_expr1,datetime_expr2) –
请看示例部分：&lt;/p&gt;

&lt;p&gt;复制代码
select timestamp(‘2008-08-08’); – 2008-08-08 00:00:00
select timestamp(‘2008-08-08 08:00:00’, ‘01:01:01’); – 2008-08-08 09:01:01
select timestamp(‘2008-08-08 08:00:00’, ‘10 01:01:01’); – 2008-08-18 09:01:01&lt;/p&gt;

&lt;p&gt;select timestampadd(day, 1, ‘2008-08-08 08:00:00’); – 2008-08-09 08:00:00
select date_add(‘2008-08-08 08:00:00’, interval 1 day); – 2008-08-09 08:00:00&lt;/p&gt;

&lt;p&gt;MySQL timestampadd() 函数类似于 date_add()。
select timestampdiff(year,’2002-05-01’,’2001-01-01’); – -1
select timestampdiff(day ,’2002-05-01’,’2001-01-01’); – -485
select timestampdiff(hour,’2008-08-08 12:00:00’,’2008-08-08 00:00:00’); – -12&lt;/p&gt;

&lt;p&gt;select datediff(‘2008-08-08 12:00:00’, ‘2008-08-01 00:00:00’); – 7
复制代码
MySQL timestampdiff() 函数就比 datediff() 功能强多了，datediff() 只能计算两个日期（date）之间相差的天数。&lt;/p&gt;

&lt;p&gt;MySQL 时区（timezone）转换函数
convert_tz(dt,from_tz,to_tz)&lt;/p&gt;

&lt;p&gt;select convert_tz(‘2008-08-08 12:00:00’, ‘+08:00’, ‘+00:00’); – 2008-08-08 04:00:00
时区转换也可以通过 date_add, date_sub, timestampadd 来实现。&lt;/p&gt;

&lt;p&gt;select date_add(‘2008-08-08 12:00:00’, interval -8 hour); – 2008-08-08 04:00:00
select date_sub(‘2008-08-08 12:00:00’, interval 8 hour); – 2008-08-08 04:00:00
select timestampadd(hour, -8, ‘2008-08-08 12:00:00’); – 2008-08-08 04:00:00&lt;/p&gt;

</description>
        <pubDate>Wed, 20 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/20/mysql-time.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/20/mysql-time.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>mac 安装 sshfs</title>
        <description>
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$brew&lt;/span&gt; cask install osxfuse
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$brew&lt;/span&gt; install sshfs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;!-- more --&gt;
&lt;p&gt;挂载(如果配上ssh key就可以完全自动化了):
sshfs root@192.168.9.109:/opt /opt/s109
卸载:
fusermount -u /opt/s109&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/18/sshfs.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/18/sshfs.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>jupyter</title>
        <description>&lt;p&gt;Jupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。
Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;官网：https://github.com/jupyter?language=python&lt;/p&gt;

&lt;p&gt;mac 安装：
pip install jupyter&lt;/p&gt;

&lt;p&gt;使用：
$jupyter notebook&lt;/p&gt;

&lt;p&gt;此时浏览器中会弹出notebook窗口（http://localhost:8888/tree）&lt;/p&gt;

&lt;p&gt;问题：
出现404&lt;/p&gt;

&lt;p&gt;修改配置文件端口&lt;/p&gt;

&lt;p&gt;$jupyter  notebook –generate-config –allow-root&lt;/p&gt;

&lt;p&gt;/Users/didi/.jupyter/jupyter_notebook_config.py&lt;/p&gt;

&lt;p&gt;$vi /Users/didi/.jupyter/jupyter_notebook_config.py&lt;/p&gt;

&lt;p&gt;把端口改为8866&lt;/p&gt;

&lt;p&gt;0 active kernels&lt;/p&gt;

&lt;p&gt;The Jupyter Notebook is running at: http://localhost:8866/?token=2d6&lt;/p&gt;

&lt;p&gt;成功
&lt;img src=&quot;https://xiazemin.github.io/MyBlog/img/jupyter.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Files下面列出了当前用户目录下所有的文件，结合右上角的upload和new你可以方便地进行文件操作。你先选择一个目录，在该目录下，new一个python2，这样当前目录即会出现一个“.ipynb”文件，同时，浏览器会弹新的标签页让你编辑该“.ipynb”文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xiazemin.github.io/MyBlog/img/jupyter_use.png&quot; alt=&quot;jupyter_use&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在该界面下，每输入一行代码Enter后不会运行当前代码，而是换行让你输入下一行代码，当你键入Shift + Enter后，将运行刚刚你输入的那几行代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xiazemin.github.io/MyBlog/img/jupyter_use1.png&quot; alt=&quot;jupyter_use&quot; /&gt;&lt;/p&gt;

&lt;p&gt;还可以new一个Terminal，如下图所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xiazemin.github.io/MyBlog/img/jupyter_use2.png&quot; alt=&quot;jupyter_use&quot; /&gt;&lt;/p&gt;

&lt;p&gt;mac 截图：
下载snipmac&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/deep_learning/2017/09/17/jupyter.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/deep_learning/2017/09/17/jupyter.html</guid>
        
        
        <category>deep_learning</category>
        
      </item>
    
      <item>
        <title>deep_learning</title>
        <description>&lt;p&gt;学习资源：
http://study.163.com/course/courseMain.htm?courseId=1003284016&lt;/p&gt;

&lt;p&gt;http://study.163.com/my#/smarts&lt;/p&gt;

&lt;!-- more --&gt;
</description>
        <pubDate>Sun, 17 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/deep_learning/2017/09/17/deep_learning.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/deep_learning/2017/09/17/deep_learning.html</guid>
        
        
        <category>deep_learning</category>
        
      </item>
    
      <item>
        <title>spark-rdd</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;参考书籍
https://aiyanbo.gitbooks.io/spark-programming-guide-zh-cn/content/index.html
每个 Spark 应用程序都由一个驱动程序(driver programe)构成，驱动程序在集群上运行用户的 main 函数来执行各种各样的并行操作(parallel operations)。Spark 的主要抽象是提供一个弹性分布式数据集(RDD resilient distributed dataset)，RDD 是指能横跨集群所有节点进行并行计算的分区元素集合。RDD 可以从 Hadoop 文件系统中的一个文件中创建而来(或其他 Hadoop 支持的文件系统)，或者从一个已有的 Scala 集合转换得到。用户可以要求 Spark 将 RDD 持久化(persist)到内存中，来让它在并行计算中高效地重用。最后，RDD 能从节点失败中自动地恢复过来。
Spark 的第二个抽象是共享变量(shared variables)，共享变量能被运行在并行计算中。默认情况下，当 Spark 运行一个并行函数时，这个并行函数会作为一个任务集在不同的节点上运行，它会把函数里使用的每个变量都复制搬运到每个任务中。有时，一个变量需要被共享到交叉任务中或驱动程序和任务之间。Spark 支持 2 种类型的共享变量：广播变量(broadcast variables)，用来在所有节点的内存中缓存一个值；累加器(accumulators)，仅仅只能执行“添加(added)”操作，例如：记数器(counters)和求和(sums)。&lt;/p&gt;

&lt;p&gt;Spark 核心的概念是 Resilient Distributed Dataset (RDD)：一个可并行操作的有容错机制的数据集合。有 2 种方式创建 RDDs：第一种是在你的驱动程序中并行化一个已经存在的集合；另外一种是引用一个外部存储系统的数据集，例如共享的文件系统，HDFS，HBase或其他 Hadoop 数据格式的数据源。&lt;/p&gt;

&lt;p&gt;RDDs 支持 2 种类型的操作：转换(transformations) 从已经存在的数据集中创建一个新的数据集；动作(actions) 在数据集上进行计算之后返回一个值到驱动程序。例如，map 是一个转换操作，它将每一个数据集元素传递给一个函数并且返回一个新的 RDD。另一方面，reduce 是一个动作，它使用相同的函数来聚合 RDD 的所有元素，并且将最终的结果返回到驱动程序(不过也有一个并行 reduceByKey 能返回一个分布式数据集)。
在 Spark 中，所有的转换(transformations)都是惰性(lazy)的，它们不会马上计算它们的结果。相反的，它们仅仅记录转换操作是应用到哪些基础数据集(例如一个文件)上的。转换仅仅在这个时候计算：当动作(action) 需要一个结果返回给驱动程序的时候。这个设计能够让 Spark 运行得更加高效。例如，我们可以实现：通过 map 创建一个新数据集在 reduce 中使用，并且仅仅返回 reduce 的结果给 driver，而不是整个大的映射过的数据集。
默认情况下，每一个转换过的 RDD 会在每次执行动作(action)的时候重新计算一次。然而，你也可以使用 persist (或 cache)方法持久化(persist)一个 RDD 到内存中。在这个情况下，Spark 会在集群上保存相关的元素，在你下次查询的时候会变得更快。在这里也同样支持持久化 RDD 到磁盘，或在多个节点间复制。&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/spark/2017/09/15/spark-rdd.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/spark/2017/09/15/spark-rdd.html</guid>
        
        <category>spark</category>
        
        
        <category>spark</category>
        
      </item>
    
      <item>
        <title>netcat</title>
        <description>&lt;p&gt;NetCat是一个非常简单的Unix工具，可以读、写TCP或UDP网络连接(network 
connection)。它被设计成一个可靠的后端(back-end) 工具，能被其它的程序
程序或脚本直接地或容易地驱动。同时，它又是一个功能丰富的网络调试和开
发工具，因为它可以建立你可能用到的几乎任何类型的连接，以及一些非常有
意思的内建功能&lt;/p&gt;

&lt;!-- more --&gt;
&lt;p&gt;最简单的使用方法，”nc host port”，能建立一个TCP连接，连向指定的
主机和端口。接下来，你的从标准输入中输入的任何内容都会被发送到指定的
主机，任何通过连接返回来的信息都被显示在你的标准输出上。这个连接会一
直持续下去，至到连接两端的程序关闭连接。注意，这种行为不同于大多数网
络程序，它们会在从标准输入读到一个文件结束符后退出。
　　NetCat还可以当服务器使用，监听任意指定端口的连接请求(inbound 
connection )，并可做同样的读写操作。除了较小限制外，它实际并不关心自
己以“客户端”模式还是“服务器”模式运行，它都会来回运送全部数据。在任何
一种模式下，都可以设置一个非活动时间来强行关闭连接。
　　它还可以通过UDP来完成这些功能，因此它就象一个telnet那样的UDP程序，
用来测试你的UDP服务器。正如它的“U”所指的，UDP跟TCP相比是一种不可靠的
数据传输，一些系统在使用UDP 传送大量数据时会遇到麻烦，但它还有一些用
途。
　　你可能会问“为什么不用telnet来连接任意的端口”？问题提得好(valid)，
这儿有一些理由。Telnet有“标准输入文件结束符(standard input EOF)”问题，
所以需要在脚本中延迟计算以便等待网络输出结束。这就是netcat持续运行直
到连接被关闭的主要原因。Telnet也不能传输任意的二进制数据，因为一些特
定的字符会被解释为Telnet的参数而被从数据流中去除。Telnet还将它的一些
诊断信息显示到标准输出上，而NetCat会将这信息与它的输出分开以不改变真
实数据的传输，除非你要求它这么做。当然了，Telnet也不能监听端口，也不
能使用UDP。 NetCat没有这些限制，比Telnet更小巧和快捷，而且还有一些其
它的功能。&lt;/p&gt;

&lt;p&gt;　　NetCat的一些主要功能：&lt;/p&gt;

&lt;p&gt;*支持连出和连入(outbound and inbound connection)，TCP和UDP，任意源和目的端口
*全部DNS正向/反向检查，给出恰当的警告
*使用任何源端口
*使用任何本地设置的网络资源地址
*内建端口扫描功能，带有随机数发生器
*内建loose source-routing功能
*可能标准输入读取命令行参数
*慢发送模式，每N秒发送一行
*以16进制显示传送或接收的数据
*允许其它程序服务建立连接，可选
*对Telnet应答，可选&lt;/p&gt;

&lt;h1 id=&quot;编译netcat&quot;&gt;编译NetCat&lt;/h1&gt;
&lt;p&gt;　　编译NetCat是非常简单的。检查一下Makefile，找到符合你的系统类型的
SYSTYPE如何拼写,然后运行“make”，然后可执行的nc就会出现了。如果没有合
适的SYSTYPE，用”generic”试试。
　　其Makefile中有dos, ultrix, sunos, solaris-static, solaris, aix, 
linux, irix, osf, freebsd, bsdi, netbsd, hpux, unixware, aux, next, 
generic等SYSTYPE，其中generic不算系统类型，则dos其实并不支持。在本文
一开始的NetCat的链接页面中，也有一个Windows 版本的NetCat，是另一个人
做的移植。
　　Linux的sys/time.h并不真正支持FD_SETSIZE的 表示，编译时会有一个无
害的警告。在一些系统中编译时，可能会与signal()有关的指针类型警告，但
不影响编译结果。&lt;/p&gt;

&lt;h1 id=&quot;开发netcat的功能&quot;&gt;开发NetCat的功能&lt;/h1&gt;
&lt;p&gt;　　NetCat小巧且功能强大，描述它的功能就是象描述瑞士军刀的功能一样。
　　如果没有提供命令行参数，NetCat会提示你从标准输入来输入命令参数，
然后NetCat会在内部解析输入。用这种办法输入命令式参数，可以用来防止借
助“ps”来查看你的命令行参数。
　　主机参数可以是一个名字或一个IP地址。如果-n出现，则它接受IP地址，
而不再对计算机的名字或域名进行解析。如果没有-n，但加上-v，则NetCat可
进行正/反向域名解析，并警告the all-too-common problem of mismatched 
name in DNS 。这会耗费稍多一点时间，但在某些情况下会有用处。如，你想
知道某个IP的主机名，NetCat可省却你手工查找的时间。
　　要建立对外的连接，必须提供一个端口号，可以是个数字，也可以
/etc/services列表中的端口服务名。当-n 出现时，则只有数字形式的端口可
以接收。
　　-v参数，可以将一些关于连接建立信息输出到标准错误。-v参数多出现几
次，则显示的信息会更多一些。如果-v参数没有出现，则NetCat将默默地工作，
至到出现错误为止。
　　-w参数后跟一个时间值，用以指定建立链接时的等待时间，-w如果多次出
现，则后面的值将取代前面的设置。-w还用来设置连接非活动时间，当标准输
入结束以后，如果等待指定的一段时间后仍没有数据返回，则NetCat会再试一
次，然后关闭连接并退出。
　　当-u参数出现时，用UDP建立连接。
　　用-o logfile参数，可以将连接上往来传输的数据以16进制的形式记录到
logfile中（每行的左半部分是16进制显示，右半部分为ascii显示）。其中，
每行的第一个字符为”&amp;lt;”或”&amp;gt;”，分别表示接收的数据或发送的数据。
　　NetCat用-s ip-addr或-s name来绑定本地网络资源地址，-p portarg 来
绑定本地端口。除了因权限限制或端口已经使用外，-p可以绑定任何端口。 
Root用户可以绑定保留的1024以内的端口。如果不用-p指定端口，则使用系统
给定的未使用的端口。(-p功能在客户端状态也可以使用,-s功能并不是在所有
的平台上都可用)
　　-l参数可以使NetCat以服务器状态运行。
”nc -l -p 1234 [remote hostname] [remote port]”可以用来指定入连的主机
和端口，如果申请连接的主机或端口不符指定，则会断开连接。
　　当编译时置-DGAPING_SECURITY_HOLE，则-e参数被NetCat支持。-e后面跟
一可执行程序的名称，当一个连接（入或出）被建立时，这个程序被运行。尤
其当NetCat以服务器端运行时，-e参数使其有点象inetd了， 只是只能运行一
个进行而已。需要说明的是，-e后的程序不能从NetCat的命令行接收参数，如
果有参数要传递，可能需要一个脚本。
　　当编译时置-DTELNET，则-t参数被支持，此时NetCat可以登录到一个
telnetd服务器，并提供相关的握手应答，至到出现登录提示符。
　　NetCat用8k的读写，来尽可能高效将收到数据显示到标准输出上及将标准
输入写到连接上。-i参数，可以用来设置发送一行标准输入信息的间隔，以减
少发送速度。
　　端口扫描是一探测主机服务的流行方法。NetCat的命令行中，先是参数，
再是主机，最后是端口。端口可以是一些服务名、端口号，或者是一个端口范
围（形如N-M）。
    ”nc -v -w 2 -z -i 1 20-30”用来扫描target主机的20-30(两端包含)端口，
-z表示不发送任何数据到TCP连接或非常有限的数据到UDP连接。-i用以指明两
个端口建立连接的时间的间隔。-w用以指明连接不活动时间。通常情况下，扫
描按从高到低的顺序依次扫描指定的端口，-r参数可以让NetCat在指定的端口
范围内随机地扫描端口。（当-r被用于单个连接时，本地的端口在8192以上，
除非用-p指定)
　　-g可以用来指定网关（最多可达8个），-G可以用来指定source-routing 
pointer。(这是原文，但我还是不明白。：（-g =&amp;gt; Group hops 
Many people are interested in testing network connectivity using IP 
source routing, even if it’s only to make sure their own firewalls 
are blocking source-routed packets. On systems that support it, the
-g switch can be used multiple times [up to 8] to construct a 
loose-source-routed path for your connection, and the -G argument 
positions the &lt;code&gt;hop pointer'' within the list. If your network 
allows source-routed traffic in and out, you can test connectivity 
to your own services via remote points in the internet. Note that 
although newer BSD-flavor telnets also have source-routing 
capability, it isn't clearly documented and the command syntax is 
somewhat clumsy. Netcat's handling of&lt;/code&gt;-g’’ is modeled after
``traceroute’’.）
　　NetCat不是一个任意包发生器，但可以与raw socket通话，nit/bpf/dlpi
有时也能行( nit/bpf/dlpi may appear at some point).推荐Drren Reed的
ip_filter包，里面有一个工具能创建并发送raw packets.&lt;/p&gt;

&lt;p&gt;netcat可以作为类似于telent的客户端,也可以监听某个端口作为服务器,还可
以作为扫描工具扫描对方主机的端口,还可以用来传输文件,不相信吗? 听我慢
慢道来:)
首先我们要弄明白netcat的工作原理,其实netcat的原理很简单,它就是从网络
的一端读入数据,然后输出到网络的另一端,它可以使用tcp和udp协议. 之所以
叫做netcat,因为它是网络上的cat,想象一下cat的功能,读出一个文件的内容,
然后输出到屏幕上(默认的stdout是屏幕,当然可以重定向到其他地方).netcat
也是如此,它读取一端的输入,然后传送到网络的另一端,
就这么简单.但是千万不要小看了它,netcat可以完成很多任务,,尤其是和其他
程序组合时.好了,废话少说,进入正题吧.:p 
网上有两种版本的netcat,一个是@stake公司的netcat,
http://www.atstake.com/research/tools/network_utilities/  也就是最初
的版本,还有一个是GNU的netcat.http://netcat.sourceforge.net/download.php 
我个人更倾向于使用GNU的netcat,因为它的功能更多,不过GNU的没有windows 
平台的版本:confused: 
至于编译和安装我想就不用说了,如果这关都过不了,我想也有点太……，看看
readme和install文件，一般情况下./configure&amp;amp;&amp;amp;make&amp;amp;&amp;amp;make install就ok了，
具体的./configure选项看看帮助。&lt;/p&gt;

&lt;p&gt;netcat的命令行程序名字为nc,是netcat的缩写,安装完了是找不到netcat这个
程序的.:)&lt;/p&gt;

&lt;p&gt;root@mail etc #nc -h
GNU netcat 0.7.0, a rewrite of the famous networking tool.
Basic usages:
connect to somewhere: nc [options] hostname port [port] …
listen for inbound: nc -l -p port [options] [hostname] [port] …
tunnel to somewhere: nc -L hostname:port -p port [options]&lt;/p&gt;

&lt;p&gt;Mandatory arguments to long options are mandatory for short options
too.
Options:
-c, –close close connection on EOF from stdin
-e, –exec=PROGRAM program to exec after connect
-g, –gateway=LIST source-routing hop point[s], up to 8
-G, –pointer=NUM source-routing pointer: 4, 8, 12, …
-h, –help display this help and exit
-i, –interval=SECS delay interval for lines sent, ports scanned
-l, –listen listen mode, for inbound connects
-L, –tunnel=ADDRESS:PORT forward local port to remote address
-n, –dont-resolve numeric-only IP addresses, no DNS
-o, –output=FILE output hexdump traffic to FILE (implies -x)
-p, –local-port=NUM local port number
-r, –randomize randomize local and remote ports
-s, –source=ADDRESS local source address (ip or hostname)
-t, –tcp TCP mode (default)
-T, –telnet answer using TELNET negotiation
-u, –udp UDP mode
-v, –verbose verbose (use twice to be more verbose)
-V, –version output version information and exit
-x, –hexdump hexdump incoming and outgoing traffic
-w, –wait=SECS timeout for connects and final net reads
-z, –zero zero-I/O mode (used for scanning)&lt;/p&gt;

&lt;p&gt;Remote port number can also be specified as range. Example: ‘1-1024’&lt;/p&gt;

&lt;p&gt;我用的是GNU的netcat,比起@stake公司的netcat多了-c 选项,不过这是很有用
的一个选项,后面我们会讲到.还有GNU的-L,-t ,-T选项和@stake的-L -t 用途
是不一样的,自己琢磨吧.&lt;/p&gt;

&lt;p&gt;一.客户端
这是最简单的使用方式,nc 
nc www.apache.org 80
get / http/1.1
HTTP/1.1 400 Bad Request
Date: Mon, 08 Dec 2003 06:23:31 GMT
Server: Apache/2.0.48-dev (Unix)
Content-Length: 310
Connection: close
Content-Type: text/html; charset=iso-8859-1&lt;/p&gt;

&lt;p&gt;400 Bad Request&lt;/p&gt;

&lt;p&gt;Bad Request
Your browser sent a request that this server could not understand.&lt;/p&gt;

&lt;p&gt;Apache/2.0.48-dev (Unix) Server at www.apache.org Port 80&lt;/p&gt;

&lt;p&gt;呵呵,看到了什么,我什么也没说哦:p&lt;/p&gt;

&lt;p&gt;二.简单服务器
nc -l -p //这里-l参数表明nc处于监听模式,-p指定端口号.
nc -l -p 1234[假设这台主机ip为192.168.0.1]
然后从客户端输入, nc 192.168.0.1 1234 然后你从任一端输入的数据就会显
示在另一端了.其实netcat的server和client的区别并不大,区别仅仅在于谁执
行了-l来监听端口,一旦连接建立以后,就没有什么区别了. 从这里我们也可以
了解netcat的工作原理了,通过网络链接读写数据.[It is a simple Unix 
utility which reads and writes data across network connections, 
using TCP or UDP protocol]–@stake主页是这么说的.&lt;/p&gt;

&lt;p&gt;三.telnet服务器
nc有一个-e的选项,用来指定在连接后执行的程序.
在windows平台上可以指定-e cmd.exe[winxp,win2000,] 如果是98就指定
command.exe.linux则指定-e bash,或者任何你喜欢的shell, 或者是你自己编
写的程序,通常是做为后门:p
指定-e的效果是由你指定的程序代替了nc自己来接受另一端的输入,并把输入
(命令)后反馈的结果显示到另一端.
server: nc -l -p 1234 -e bash
client: nc 192.168.0.1 1234 就可以远程登陆server了
其实我们不一定非要在server端指定-e,也可以在client端指定.
server: nc -l -p 1234
client: nc -e 192.168.0.1 1234 .这样,就相当于在server上远程登陆client
了.我前面说过,有关client和server的区分是没有什么意义的.谁做为telnet 
server的标准只有一个,谁执行了-e [shell].&lt;/p&gt;

&lt;p&gt;四.ftp服务器
nc可以从任何地方接受输入,不仅仅是-e指定的程序,还可以是文件; nc可以将
输入重定向到任何地方,不仅仅是默认的屏幕.指定的方法很简单,使用 &amp;gt; 和
somefile
例2; server: nc -l -c -p 1234 &amp;gt;somefile
client: nc 192.168.0.1 1234 /check/host.disk1
然后,可以利用linux内核的loopback特性,把host.disk以只读的方式mount上,
然后就可以做取证分析了.
[如果真的做取证分析,一定不要在原始的受害主机硬盘上find和类似的操作,
因为这会修改时间标记而破坏原始的证据]&lt;/p&gt;

&lt;p&gt;例4. 将文件压缩后再传送.
如果你的文件很大,何不先压缩它呢,利用管道, 我们甚至不用生成压缩后的中
间文件!
源主机: tar czf - work|nc -l -c -p 1234 
目的主机: nc 192.168.0.1 1234|tar xzvf -&lt;/p&gt;

&lt;p&gt;[tar打包时最好不要使用绝对路径,虽然GNU的tar能把它转换成相对路径,但不
是所有的平台都能做到,所以如果不想把你的文件系统搞乱的话,就使用相对路
径吧!]&lt;/p&gt;

&lt;p&gt;1，端口扫描&lt;/p&gt;

&lt;p&gt;端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。&lt;/p&gt;

&lt;p&gt;$nc -z -v -n 172.31.100.7 21-25
可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.
z 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换(谢谢@jxing 指点)&lt;/p&gt;

&lt;p&gt;v 参数指使用冗余选项（译者注：即详细输出）&lt;/p&gt;

&lt;p&gt;n 参数告诉netcat 不要使用DNS反向查询IP地址的域名&lt;/p&gt;

&lt;p&gt;这个命令会打印21到25 所有开放的端口。Banner是一个文本，Banner是一个你连接的服务发送给你的文本信息。当你试图鉴别漏洞或者服务的类型和版本的时候，Banner信息是非常有用的。但是，并不是所有的服务都会发送banner。&lt;/p&gt;

&lt;p&gt;一旦你发现开放的端口，你可以容易的使用netcat 连接服务抓取他们的banner。&lt;/p&gt;

&lt;p&gt;$ nc -v 172.31.100.7 21
netcat 命令会连接开放端口21并且打印运行在这个端口上服务的banner信息。
 葱油拌面
葱油拌面
翻译于 4年前
8人顶
顶  翻译得不错哦！
Chat Server&lt;/p&gt;

&lt;p&gt;假如你想和你的朋友聊聊，有很多的软件和信息服务可以供你使用。但是，如果你没有这么奢侈的配置，比如你在计算机实验室，所有的对外的连接都是被限制的，你怎样和整天坐在隔壁房间的朋友沟通那？不要郁闷了，netcat提供了这样一种方法，你只需要创建一个Chat服务器，一个预先确定好的端口，这样子他就可以联系到你了。&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$nc -l 1567
netcat 命令在1567端口启动了一个tcp 服务器，所有的标准输出和输入会输出到该端口。输出和输入都在此shell中展示。&lt;/p&gt;

&lt;p&gt;Client&lt;/p&gt;

&lt;p&gt;$nc 172.31.100.7 1567
不管你在机器B上键入什么都会出现在机器A上。
 葱油拌面
葱油拌面
翻译于 4年前
8人顶
顶  翻译得不错哦！
其它翻译版本(1)
3，文件传输&lt;/p&gt;

&lt;p&gt;大部分时间中，我们都在试图通过网络或者其他工具传输文件。有很多种方法，比如FTP,SCP,SMB等等，但是当你只是需要临时或者一次传输文件，真的值得浪费时间来安装配置一个软件到你的机器上嘛。假设，你想要传一个文件file.txt 从A 到B。A或者B都可以作为服务器或者客户端，以下，让A作为服务器，B为客户端。&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$nc -l 1567 &amp;lt; file.txt
Client
$nc -n 172.31.100.7 1567 &amp;gt; file.txt
这里我们创建了一个服务器在A上并且重定向netcat的输入为文件file.txt，那么当任何成功连接到该端口，netcat会发送file的文件内容。
在客户端我们重定向输出到file.txt，当B连接到A，A发送文件内容，B保存文件内容到file.txt.&lt;/p&gt;

&lt;p&gt;没有必要创建文件源作为Server，我们也可以相反的方法使用。像下面的我们发送文件从B到A，但是服务器创建在A上，这次我们仅需要重定向netcat的输出并且重定向B的输入文件。&lt;/p&gt;

&lt;p&gt;B作为Server&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$nc -l 1567 &amp;gt; file.txt
Client&lt;/p&gt;

&lt;p&gt;nc 172.31.100.23 1567 &amp;lt; file.txt
 葱油拌面
葱油拌面
翻译于 4年前
8人顶
顶  翻译得不错哦！
4，目录传输&lt;/p&gt;

&lt;p&gt;发送一个文件很简单，但是如果我们想要发送多个文件，或者整个目录，一样很简单，只需要使用压缩工具tar，压缩后发送压缩包。&lt;/p&gt;

&lt;p&gt;如果你想要通过网络传输一个目录从A到B。&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$tar -cvf – dir_name | nc -l 1567
Client&lt;/p&gt;

&lt;p&gt;$nc -n 172.31.100.7 1567 | tar -xvf -
这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。
在客户端我们下载该压缩包通过netcat 管道然后打开文件。&lt;/p&gt;

&lt;p&gt;如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$tar -cvf – dir_name| bzip2 -z | nc -l 1567
通过bzip2压缩&lt;/p&gt;

&lt;p&gt;Client&lt;/p&gt;

&lt;p&gt;$nc -n 172.31.100.7 1567 | bzip2 -d |tar -xvf -
使用bzip2解压
 葱油拌面
葱油拌面
翻译于 4年前
6人顶
顶  翻译得不错哦！&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;加密你通过网络发送的数据&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果你担心你在网络上发送数据的安全，你可以在发送你的数据之前用如mcrypt的工具加密。&lt;/p&gt;

&lt;p&gt;服务端&lt;/p&gt;

&lt;p&gt;$nc localhost 1567 | mcrypt –flush –bare -F -q -d -m ecb &amp;gt; file.txt
使用mcrypt工具加密数据。
客户端&lt;/p&gt;

&lt;p&gt;$mcrypt –flush –bare -F -q -m ecb &amp;lt; file.txt | nc -l 1567
使用mcrypt工具解密数据。
以上两个命令会提示需要密码，确保两端使用相同的密码。&lt;/p&gt;

&lt;p&gt;这里我们是使用mcrypt用来加密，使用其它任意加密工具都可以。&lt;/p&gt;

&lt;p&gt;showme
showme
翻译于 4年前
7人顶
顶  翻译得不错哦！&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;流视频&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;虽然不是生成流视频的最好方法，但如果服务器上没有特定的工具，使用netcat，我们仍然有希望做成这件事。&lt;/p&gt;

&lt;p&gt;服务端&lt;/p&gt;

&lt;p&gt;$cat video.avi | nc -l 1567
这里我们只是从一个视频文件中读入并重定向输出到netcat客户端
$nc 172.31.100.7 1567 | mplayer -vo x11 -cache 3000 -
这里我们从socket中读入数据并重定向到mplayer。&lt;/p&gt;

&lt;p&gt;showme
showme
翻译于 4年前
7人顶
顶  翻译得不错哦！
7，克隆一个设备&lt;/p&gt;

&lt;p&gt;如果你已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器，而你不想在重复配置一遍。不在需要重复配置安装的过程，只启动另一台机器的一些引导可以随身碟和克隆你的机器。&lt;/p&gt;

&lt;p&gt;克隆Linux PC很简单，假如你的系统在磁盘/dev/sda上&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$dd if=/dev/sda | nc -l 1567
Client
$nc -n 172.31.100.7 1567 | dd of=/dev/sda
dd是一个从磁盘读取原始数据的工具，我通过netcat服务器重定向它的输出流到其他机器并且写入到磁盘中，它会随着分区表拷贝所有的信息。但是如果我们已经做过分区并且只需要克隆root分区，我们可以根据我们系统root分区的位置，更改sda 为sda1，sda2.等等。
 葱油拌面
葱油拌面
翻译于 4年前
6人顶
顶  翻译得不错哦！
8，打开一个shell&lt;/p&gt;

&lt;p&gt;我们已经用过远程shell-使用telnet和ssh，但是如果这两个命令没有安装并且我们没有权限安装他们，我们也可以使用netcat创建远程shell。&lt;/p&gt;

&lt;p&gt;假设你的netcat支持 -c -e 参数(默认 netcat)&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$nc -l 1567 -e /bin/bash -i
Client
$nc 172.31.100.7 1567
这里我们已经创建了一个netcat服务器并且表示当它连接成功时执行/bin/bash
假如netcat 不支持-c 或者 -e 参数（openbsd netcat）,我们仍然能够创建远程shell&lt;/p&gt;

&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;$mkfifo /tmp/tmp_fifo
$cat /tmp/tmp_fifo | /bin/sh -i 2&amp;gt;&amp;amp;1 | nc -l 1567 &amp;gt; /tmp/tmp_fifo
这里我们创建了一个fifo文件，然后使用管道命令把这个fifo文件内容定向到shell 2&amp;gt;&amp;amp;1中。是用来重定向标准错误输出和标准输出，然后管道到netcat 运行的端口1567上。至此，我们已经把netcat的输出重定向到fifo文件中。
说明：&lt;/p&gt;

&lt;p&gt;从网络收到的输入写到fifo文件中&lt;/p&gt;

&lt;p&gt;cat 命令读取fifo文件并且其内容发送给sh命令&lt;/p&gt;

&lt;p&gt;sh命令进程受到输入并把它写回到netcat。&lt;/p&gt;

&lt;p&gt;netcat 通过网络发送输出到client&lt;/p&gt;

&lt;p&gt;至于为什么会成功是因为管道使命令平行执行，fifo文件用来替代正常文件，因为fifo使读取等待而如果是一个普通文件，cat命令会尽快结束并开始读取空文件。&lt;/p&gt;

&lt;p&gt;在客户端仅仅简单连接到服务器&lt;/p&gt;

&lt;p&gt;Client&lt;/p&gt;

&lt;p&gt;$nc -n 172.31.100.7 1567
你会得到一个shell提示符在客户端
 葱油拌面
葱油拌面
翻译于 4年前
7人顶
顶  翻译得不错哦！
其它翻译版本(1)
反向shell&lt;/p&gt;

&lt;p&gt;反向shell是指在客户端打开的shell。反向shell这样命名是因为不同于其他配置，这里服务器使用的是由客户提供的服务。&lt;/p&gt;

&lt;p&gt;服务端&lt;/p&gt;

&lt;p&gt;$nc -l 1567
在客户端，简单地告诉netcat在连接完成后，执行shell。
客户端&lt;/p&gt;

&lt;p&gt;$nc 172.31.100.7 1567 -e /bin/bash
现在，什么是反向shell的特别之处呢 
反向shell经常被用来绕过防火墙的限制，如阻止入站连接。例如，我有一个专用IP地址为172.31.100.7，我使用代理服务器连接到外部网络。如果我想从网络外部访问 这台机器如1.2.3.4的shell，那么我会用反向外壳用于这一目的。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;指定源端口&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;假设你的防火墙过滤除25端口外其它所有端口，你需要使用-p选项指定源端口。&lt;/p&gt;

&lt;p&gt;服务器端&lt;/p&gt;

&lt;p&gt;$nc -l 1567
客户端&lt;/p&gt;

&lt;p&gt;$nc 172.31.100.7 1567 -p 25
使用1024以内的端口需要root权限。&lt;/p&gt;

&lt;p&gt;该命令将在客户端开启25端口用于通讯，否则将使用随机端口。&lt;/p&gt;

&lt;p&gt;Lax
Lax
翻译于 4年前
6人顶
顶  翻译得不错哦！&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;指定源地址&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;假设你的机器有多个地址，希望明确指定使用哪个地址用于外部数据通讯。我们可以在netcat中使用-s选项指定ip地址。&lt;/p&gt;

&lt;p&gt;服务器端&lt;/p&gt;

&lt;p&gt;$nc -u -l 1567 &amp;lt; file.txt
客户端&lt;/p&gt;

&lt;p&gt;$nc -u 172.31.100.7 1567 -s 172.31.100.5 &amp;gt; file.txt
该命令将绑定地址172.31.100.5。&lt;/p&gt;

&lt;p&gt;这仅仅是使用netcat的一些示例。&lt;/p&gt;

&lt;p&gt;其它用途有：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;使用-t选项模拟Telnet客户端，
HTTP客户端用于下载文件，
连接到邮件服务器，使用SMTP协议检查邮件，
使用ffmpeg截取屏幕并通过流式传输分享，等等。其它更多用途。 简单来说，只要你了解协议就可以使用netcat作为网络通讯媒介，实现各种客户端。
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Fri, 15 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/15/netcat.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/15/netcat.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>markdown-table</title>
        <description>&lt;ol&gt;
  &lt;li&gt;方案一：
markdown原生语法可以生成表格,在字段左右加｜分隔，第二行 | -   |-:| :—–: |
例如
&lt;code&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;水果&lt;/td&gt;
      &lt;td&gt;价格&lt;/td&gt;
      &lt;td&gt;数量&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;| -   |-:| :--: |

| 香蕉        | $1      |   5    |

| 苹果        | $1      |   6    |

| 草莓        | $1      |   7    |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;显示效果&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;水果&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;价格&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;数量&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;香蕉&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;苹果&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;草莓&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Academy&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Harry Potter&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Gryffindor&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Hermione Granger&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Gryffindor&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Draco Malfoy&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Slytherin&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;!-- more --&gt;
&lt;ol&gt;
  &lt;li&gt;方案二
markdown和html语法兼容，可以使用html的table
例如：&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;设备&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;设备文件名&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;文件描述符&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;类型&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;键盘&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;/dev/stdin&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;标准输入&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
        &lt;tr&gt;
            &lt;th&gt;设备&lt;/th&gt;
            &lt;th&gt;设备文件名&lt;/th&gt;
            &lt;th&gt;文件描述符&lt;/th&gt;
            &lt;th&gt;类型&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;键盘&lt;/th&gt;
            &lt;th&gt;/dev/stdin&lt;/th&gt;
            &lt;th&gt;0&lt;/th&gt;
            &lt;th&gt;标准输入&lt;/th&gt;
        &lt;/tr&gt;
&lt;/table&gt;
&lt;ol&gt;
  &lt;li&gt;方案三
excel转markdown工具
https://link.zhihu.com/?target=http://fanfeilong.github.io/exceltk0.0.4.7z&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 15 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/15/markdown-table.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/15/markdown-table.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>books-sites</title>
        <description>&lt;!-- more --&gt;
&lt;p&gt;程序猿必须知道的一些有用的（外国）网站&lt;/p&gt;

&lt;p&gt;2017-09-13 算法与数据结构
来自：开源中国
链接：https://www.oschina.net/translate/best-websites-a-programmer-should-visit（点击尾部阅读原文前往）
原文：https://github.com/sdmg15/Best-websites-a-programmer-should-visit&lt;/p&gt;

&lt;p&gt;在学习计算机科学（CS）时，必须知道一些有用的网站，以便随时掌握信息，了解技术前沿和学习新技术。下面是你应该访问的一些网站的不详尽的列表，一旦我得到了另一个链接，这个列表就会被更新，但是你也可以添加你知道的网站来做贡献。&lt;/p&gt;

&lt;p&gt;索引&lt;/p&gt;

&lt;p&gt;当你遇到困境时
新闻
初学者的编码实践
给那些想开始一个小项目却找不到点子的人
一般编码建议
编码风格
一般工具
面试的准备
纪录片
学习新知识的慕课（大型开放式网络课程）网
你的首选编程语言的相关网站（对我来说是Java）
学习人工智能
讨论会、研究写作、会谈等
凡事汇聚一处
YouTube频道
好文章
播客
构建简单的编译器/解释器
观摩他人的代码
教程
程序员必知必会
竞争式编程
计算机书籍
视频教程
线上编译器和代码片段分享
开发人员的博客
为了提升你的英语
当你厌烦了计算机科学相关的东西&lt;/p&gt;

&lt;p&gt;当你遇到困境时&lt;/p&gt;

&lt;p&gt;StackOverflow : 订阅他们的每周时事通讯和其他你感兴趣的话题
Quora : 分享知识、更好地了解世界的地方
Learn Anything : 策划知识图的社区，在那里可以找到学习任何东西的最佳路径
devRant : 社区，在那里你可以咆哮和宣泄你的压力
Codementor : 导师式社区，可以通过1对1的帮助等在同行开发人员的指导下学习&lt;/p&gt;

&lt;p&gt;新闻&lt;/p&gt;

&lt;p&gt;Hacker News : 程序员的新闻聚合，在那里礼貌为王，尝试以一篇时事通讯在你的收件箱里获取头条新闻
Hacker Newsletter : 手动策划，每周发布
Hacker News Digest : 自动策划，按你所希望的频率发布
Ars Technica : 发布独家的高质量文章
ACM TechNews : 科技类新闻
Lobsters : 大龙虾社区是围绕链接聚合和讨论的关注技术的社区
TechCrunch : 致力于深度剖析初创公司、评论互联网新产品，以及曝光科技新闻
The Verge : 更加面向产品的科技新闻
Recode : 聚焦于硅谷商业的科技信息
GSMArena.com : 最新移动电话和安卓相关的新闻
product hunt : 发现你的下一个最爱之物
AlternativeTo : 众包软件推荐
Better Dev Links : 助力你成为更佳开发人员的每周链接
DevOpsLinks : 对 DevOps 感兴趣的数以千计的开发人员和 IT 专家的网络社区&lt;/p&gt;

&lt;p&gt;初学者的编码实践&lt;/p&gt;

&lt;p&gt;freeCodeCamp : 学习为非盈利组织编写和构建项目。今天就构建你的全栈网页开发组合
Reddit.com/r/dailyprogrammer : 有趣的编程挑战，在那里你可以观摩和学习他人的代码，即使你不能以代码解决问题，你也可以看看别人如何解决。
Programming by Doing : 对于那些想从绝对基础开始的人来说非常好的网站
CodeAbbey - a place where everyone can master programming : 从问题开始的最佳之地，从最简单的问题开始，每个问题逐步增加难度。
Exercism.io : 下载并解决超过30种不同语言的练习问题，并与其他人分享你的解决方案。
Programming Tasks : 大量收集小应用程序
karan/Projects-Solutions : 解决以上链接中的大部分问题的方法
Lod - Cloud : 链接开放数据云图
Cave of programming : 学习编程，升级技能。
People Can Program : 网络上最对用户友好的学习编码的应用
Codeacademy : 交互式学习编码，免费。
Vim adventures : 通过玩来学习 VIM&lt;/p&gt;

&lt;p&gt;给那些想开始一个小项目却找不到点子的人&lt;/p&gt;

&lt;p&gt;martyr2s-mega-project-ideas-list : 包含从初学者到中级水平的大约 125 个项目点子
karan/Projects : 大量的小项目，供初学者选用
Wrong “big projects” for beginners : 如何选择从哪里开始
vicky002/1000-Projects : 可以凭任意编程语言实现的实际项目的巨长清单！&lt;/p&gt;

&lt;p&gt;一般编码建议&lt;/p&gt;

&lt;p&gt;Things I Wish Someone Had Told Me When I Was Learning How to Code — Free Code Camp : 我从教别人中学到了什么
Lessons From A Lifetime Of Being A Programmer : 来自终身程序员的编程者头条教训
Programming Principles : 程序设计原理与模式分类综述
What every computer science major should know : 良好编程的原则
How to become a programmer, or the art of Googling well : 如何成为一名程序员，或搜索的艺术
Code Review Best Practices : Kevin London 的博客
Dieter Rams : 10 Principles of Good Product Design : Stephen Haunts { 战壕中的编码 }
10-ways-to-be-a-better-developer : 开发人员的进阶之路！
Working as a Software Developer : Henrik Warne 的博客
Software design pattern : 设计模式的全集
Design Patterns : 以示例详细解释设计模式
JS Project Guidelines : 一组 JavaScript 项目的最佳实践&lt;/p&gt;

&lt;p&gt;编程风格&lt;/p&gt;

&lt;p&gt;CS 106B Coding Style Guide : 制作意大利面条（spaghetti）的人必看
Google C++ Style Guide
Airbnb JS Style Guide : 对 JavaScript 的一种最合理的方法
Airbnb Ruby Style Guide : Airbnb 的 Ruby 风格指南
What are some bad coding habits you would recommend a beginner avoid getting into? : 开始时要避免的坏习惯
Good C programming habits. • /r/C_Programming  : 值得采用的 C 编程习惯
How to Report Bugs Effectively : 想报告 bug 但你不知道怎么做？看看这个帖子
Debugging Faqs : 检查如何调试程序
Stuff you need to Code Better! : 能帮到你的材料
Directory of Online CS Courses : 免费的计算机科学的线上课程
Directory of CS Courses (many with online lectures) : 计算机科学的另一套线上课程
Angular 1 Style Guide : 官方认可的风格指南，作者 John Pappa&lt;/p&gt;

&lt;p&gt;一般工具&lt;/p&gt;

&lt;p&gt;regex101 : 线上正则表达式测试器和调试器： PHP、 PCRE、 Python、 Golang 和 JavaScript
CodePen ： 前端开发人员的游乐场兼浏览器版代码编辑器
Devicons : 给开发人员的图标的备忘单&lt;/p&gt;

&lt;p&gt;面试的准备&lt;/p&gt;

&lt;p&gt;Pramp | 软件工程师自由点播的面试实践平台 :与真正的同行练习程序员的面试。
GeeksforGeeks | 给极客的计算机科学门户网站 : 同时订阅他们的提要以获得新文章的链接。
一个网站，关注术面试问题、脑筋急转弯、难题、怪题 : 那是些什么见鬼的东西，还有其他让你思考的东西！
问题集 | LeetCode OJ : 针对面试的编码实践
程序员和软件面试问答
Reddit.com/user/ashish2199/m/puzzles : 逻辑难题
量化分析的难题以及解答的汇集
能力倾向的问题和答案 : 量化分析和能力倾向的准备
面试档案- Java Honk
编程面试的10大算法
算法设计canvas)
大O算法复杂度的小抄
Unix / Linux 小抄
怎样去面试
怎样从算法面试中胜出
开心难题
通过动画可视化数据结构和算法
这里是怎样准备技术面试? /r/cscareerquestions
技术面试指南
为什么你赚得少 ? /r/cscareerquestions
IIT Delhi Placement Experience
what_are_your_goto_questions_for_the_do_you_have?
/r/cscareerquestions : 这里有关于编程面试问题的超长列表，我在为4大面试而学习时汇编的。我想你们会发现它很有用的！
Interviewing At Jane Street
How to prepare for an interview - 1：如何准备面试
Summer Internship: The Ultimate Guide
The 25 most difficult HR questions：25 个最难的 HR 问题
Job interviews News, Videos, Reviews and Gossip - Lifehacker：面试新闻、视频、评论和八卦
How to Answer the Toughest 40 Job Interview Questions | ICS Job Portal：如何回答最难的 40 个面试问题
Job Interview Questions and Best Answers：面试问题和最佳答案
How to Answer “Tell Me a Little About Yourself” | The Art of Manliness
Job Interview: How to Ace a Job Interview | The Art of Manliness
Give your résumé a face lift
BIG O Misconceptions
Bitwise tricks
Core Java Interview questions - Interview question on each topic
Java Interview Questions and Answers：Java 面试问题和答案
Big collection of interview preparation links ? /r/cscareerquestions
Unsolicited_advice_for_job_seekers_and_employers
five-essential-phone-screen-questions - steveyegge2
CS9: Problem-Solving for the CS Technical Interview：CS 技术面试问题解答
Mission-peace/interview problems : 编程面试问题的大汇集
SQL Joins explained using venn diagram
10 Frequently asked SQL Query Interview Questions
Get Ready to Learn SQL: 8. Database Normalization Explained in Simple English - Essential SQL
Programming Language Concepts: Lecture Notes : 面向对象编程的概念和编程语言的概念
We Help Coders Get Hired : 这个网站提供关于系统设计、面试策略、软技能等方面的课程
checkcheckzz/system-design-interview
How to Break Into the Tech Industry - a Guide to Job Hunting and Tech Interviews
Freshers Interviews
C PUZZLES, Some interesting C problems
wu :: riddles(hard) : 逻辑难题和谜题
github.com/odino/interviews : 面试的重要问题清单
svozniuk/java-interviews : Java 面试问题
kimberli/interviews : 针对面试的学习表
Determining the big-O runtimes of these different loops? : 真地很好的 stackoverflow 问题，囊括了计算运行时复杂度的基础。
ChiperSoft/InterviewThis : 面试时要问的问题以更多地了解公司
SQL 面试问题 : 很棒的 SQL 测试&lt;/p&gt;

&lt;p&gt;纪录片&lt;/p&gt;

&lt;p&gt;Machine that Changed the World - a very good documentary about history of computers （改变世界的机器——关于电脑历史的优秀的纪录片）
Part 1 是无法获取的，因为广为流传的版权声明问题。
Part 2: Inventing the Future 发明未来
Part 3: The Paperback Computer 简装计算机
Part 4: The Thinking Machine 会思考的机器
Part 5: The World at Your Fingertips 你指尖下的世界
Triumph of the Nerds 神之胜利: 播放列表
Project Code Rush - The Beginnings of Netscape / Mozilla Documentary 项目代码竞赛—— Netscape/Mozilla 纪录片的始祖
The Code: Story of Linux documentary 代码：关于 linux 故事的纪录片
Breaking the Code: Biography of Alan Turing 打破代码：艾伦图灵自传
Mechanical Computer (All Parts) 机械电脑: 从20世纪50年代以来，非常好的解释了机械电脑如何在没有所有现代电子产品的情况下的工作原理的视频。
Download: The True Story of the Internet 互联网的真实故事: 发现频道的纪录片之一，描述浏览器之战、网络泡沫等内容。
Teach Yourself Computer Science 自学计算机科学
How does CPU execute program (video) 视频：CPU 是如何执行程序的
Machine Code Instructions (video) 视频：机器代码指令
Harvard CS50 - Asymptotic Notation (video) 视频：Harvard CS50-渐进表示法
Cracking The Code Interview 编码面试破解指南
Cracking the Coding Interview - Fullstack Speaker Series 全栈系列
Ask Me Anything: Gayle Laakmann McDowell (author of Cracking the Coding Interview) 无所不问&lt;/p&gt;

&lt;p&gt;学习新知识的网络课程&lt;/p&gt;

&lt;p&gt;Class Central : 数以千计的慕课课程的10万多的学生评论目录
NPTEL Vidoes COMP_SCI_ENGG
Coursera.org
edX
MOOC.fi : 来自赫尔辛基大学的免费线上课程
Udacity
Kadenze | Creative Programming : 聚焦于艺术与创造力的编程课程
UCBerkeley
麻省理工学院电气工程与计算机科学系的网络开放课程
CS50
prakhar1989/awesome-CS-courses : 囊括了大量计算机科学课程的列表
Computer Science Resources : 给自学者的慕课课程列表&lt;/p&gt;

&lt;p&gt;与你的首选编程语言相关的网站（对我来说是 Java ）&lt;/p&gt;

&lt;p&gt;重温Java : 有益于 Java 语言学习和面试准备
The Java?教程 : 最好的 Java 教程
Artima.co的Java角
Java 可视化器 : 帮助可视化引用、变量的值，等等
Java 讲座笔记
学习 Java : 学习 Java 的一本线上教科书
Bill Venners所著Java虚拟机内幕的免费线上章节
理解 JVM 内部
垃圾收集如何作用
欢迎来到 JavaWorld.com
Java内存模型
Netbeans 键盘快捷键 : 使用 NetBeans 时提高你的生产力的键盘快捷键
IntelliJ 键盘快捷键 : 使用 IntelliJ 时提高你的生产力的键盘快捷键
XyzWs Java 问与答  : Java 面试问题的大汇总
搜索开发源代码 Java API : 查看 Java 库的源代码，学习其如何实现
JournalDev - Java、Java EE、 Android、Web 开发教程
算法和数据结构的实现，面试问题和答案：算法和数据结构的实现，面试问题和答案
什么是垃圾收集 : 揭秘垃圾收集
学习Java的最佳必读书籍 : 夯实 Java 基础
垃圾收集（Java）； 扩充数据 （视频）
Java Off Heap: 离开堆房的 Java
Java源代码: Java 源代码
编译器（视频）
深入Java；垃圾收集是好事！
The C++ Programming Language :  C++ 编程语言
Bjarne Stroustru的问与答 : C++ 问与答
Bjarne Stroustrup的 C++ 风格以及技术问答 : C++ 问与答
C++11 -  ISO C++ 的新标准 : C++11 问与答&lt;/p&gt;

&lt;p&gt;学习人工智能&lt;/p&gt;

&lt;p&gt;What’s the difference between AI- DP and ML? : 人工智能、机器学习和深度学习的区别
Unsupervised Sentiment Neuron : 无人监控的情绪神经元
Robots that learn : 会学习的机器人
grakn.ai : 针对 AI 的数据库
fast.ai : 给非研究生水平的程序员的免费的深度学习的实践课程！&lt;/p&gt;

&lt;p&gt;研讨会、研究写作、会谈等&lt;/p&gt;

&lt;p&gt;Advice on Research and Writing：研究与写作咨询
Seminar and reports：研讨会和报告
PHD MS Articles
Practical Tips for Talking at Usergroups and Conferences and Giving presentation on software project to non-programmers：在用户组和会议上进行交流的实用技巧，并向非程序员介绍软件项目&lt;/p&gt;

&lt;p&gt;凡事汇聚一处&lt;/p&gt;

&lt;p&gt;reddit.com/user/ashish2199/m/cs_student_subs : 计算机科学和编程相关的 reddit 话题汇总。&lt;/p&gt;

&lt;p&gt;YouTube 频道&lt;/p&gt;

&lt;p&gt;Computerphile : 每个计算机科学系的学习必看
ComputerHistory : 给那些想知道计算机历史的人
GoogleTechTalks : 关于热门话题的视频和科技行业正在发生的酷事
Placement Grid : 面试和校园实习经验
Google Developers
Facebook Developers
O’Reilly : 世界最佳技术作家访谈录
Java : Java 相关的访谈录
JavaOne : Java 大会
CppCon : C++ 大会
C++Now (BoostCon) : C++Now （前身为 BoostCon） 大会
Meeting C++ YT Kanalseite : C++ 相关的访谈录
ThinMatrix : 以 Java 凭 OpenGL 创建 3D 游戏的开发人员的博客和教程
yegor256
Scott Meyers: Past Talks
thoughtbot : 关于各种话题的访谈录
code::dive conference : 诺基亚 Wroc?aw 技术中心组织的 code::dive 大会
HowToBecomeTV : 囊括科技行业相关人员和开发者的优秀访谈
Siraj Raval : 人工智能和深度学习的视频教程
Netflix UI Engineering : 给 web 开发人员、移动开发人员和对 Netflix 的技术栈感兴趣的开发人员观看的很棒的视频
Coding Blocks : 教程、如何、建议和技巧
Fun Fun Function : 来自 Mattias Petter Johansson 对编程分类主题的每周一次的系列，包括一些与编码不直接相关的主题
Gynvael Coldwin : 极好的逆向工程和黑客（CTF）播客。每周三有线上直播。&lt;/p&gt;

&lt;p&gt;好文章&lt;/p&gt;

&lt;p&gt;对初级开发人员的期望
加速你的编码技巧的关键
一个软件开发人员的阅读列表 : 里面有一些好书和链接。
以通俗话语解释的40个关键的计算机科学概念
每个程序员应该知道的关于内存的内容，第1部分
我们正在通过创新技术重塑零售业
统一码
每个程序员都绝对、肯定需要知道的编码和字符集以操作文本
算法的清单
深入字节码
数据结构的地图
浅谈图论
Linux 内幕
编译为 Lua 的一门程序员友好语言
为什么快速页面很重要 : 为什么应用速度很重要，收入
数据结构和算法 : 一些算法和数据结构及其解决方案的清单
编制一个TCP/IP 协议栈 : 让我们编制一个 TCP/IP 协议栈 5: TCP 转发&lt;/p&gt;

&lt;p&gt;播客&lt;/p&gt;

&lt;p&gt;编程积木 - 忙不停地学习原理、模式和更佳实践
MS Dev Show
愤世嫉俗的开发人员
软件工程师电台 ：针对专业软件开发人员的博客。目标是成为一个持久的教育资源，而不是一个新闻播客。
JavaScript 碎碎念 : 每周一次的讨论，关于 JavaScript、前端、社区、职业和框架。
 开发人员的茶 : 给开发人员设计的适合茶歇的播客
全栈电台 : 方方面面，从产品设计到用户体验到单元测试到系统管理
软件工程日报 : 关于软件主题的每日技术访谈
自行车车棚 : 关于 Ruby、Rails、JavaScript 及其他的开发经验和挑战的嘉宾讨论
The Changelog : 每周一次的对话，触及开放源码技术的核心，以及创建他们的作者
前端的开心时刻 : 一个播客，其特色是一桌来自 Netflix、 Evernote、 Atlassian 和 LinkedIn 的软件工程师一边喝茶一边谈论前端开发的所有事情。
React Native 电台  : 每周讨论用 JavaScript 和 React 创建移动应用的工具、技巧和技术。
IPhreaks : 开发老手的关于 iOS 开发和相关技术的每周小组讨论。讨论 Apple、 工具、实践和代码。
Syntax : Wes Bos 和 Scott Tolinski 给 Web 开发人员的美味的播客
Developer On Fire : Dave Rael 主持的播客，分享开发人员的博爱精神和软件业中了不起的人物的故事。
Groovy Podcast: Groovy 播客&lt;/p&gt;

&lt;p&gt;构建简单的编译器/解释器&lt;/p&gt;

&lt;p&gt;Awesome Compilers : 有关编译器、解释器和运行时相关资源的列表
Resources for Amateur Compiler Writers Amateur 编译器作者的资源
Possibly the smallest compiler ever  目前为止最小的编译器
Writing My First Compiler 编写我的第一个编译器
Structure and Interpretation of Computer Programs 计算机程序的结构和转译
Let’s Build A Simple Interpreter. Part 1. 让我们构建一个简单的解释器（一）
Growing a compiler 增强一个编译器&lt;/p&gt;

&lt;p&gt;教程&lt;/p&gt;

&lt;p&gt;Subtle | Poor Man’s CI：了解持续集成平台在 Hood 下是如何工作的，通过使用 Node.js 与 git 构建您自己的应用
Tutorialspoint：一个教程网站
W3Schools 在线 Web 教程
开放数据结构：用于学习 DS 和 algos 的优秀资源，提供各种语言的代码 C ++、Java、伪代码
John Morris 的数据结构和算法：另一个好的代码分析
CMSI 281：数据结构：数据结构的简单介绍
如何在 C ++ 中编程：用于学习 C ++和 STL 的优秀资源
TopCoder 教程：数据科技教程网站
黑客的 Git 指南：对于想要打好深厚 git 基础知识的人来说
Git 从内到外
10 分钟学习 UNIX
Bash 指南：学习 Bash Shell 的非常好的指南
Linux 教程：学习 Linux 的好资源
UNIX 教程 - 简介
Linux 初学者教程
学习 Shell
动态编程 - PrismoSkills：如果想学习如何解决 DP 问题，非常好的资源。
Deep C：C 语言很好的演示
C 编程语言常见问题
操作系统课程注意事项：Galvin 的课堂笔记
SQL (Structured Query Language) in one page : SQL.SU：一个非常好的 SQL 备忘录
C 编程简介
MySQL 要点
http://www.mysqltutorial.org/
Best Of - Gustavo Duarte：包含有关各种主题的文章
收集所有的备忘录：许多编程语言的备忘录
The Descent to C：对于那些从一些较高的编程语言（如 java 或 python ）转移到 C 的人来说。
VimTutor +：在浏览器上学习 VIM
Linux 旅程：学习 linux 的好站点
C 编程
CS 2112/ENGRD 2112 Fall 2015 :关于数据结构和算法的良好记录。
更多关于 Github ——有趣的 Markdown
Unix 编程环境
Linux 命令行：一个完整的介绍
TCP / IP 系列
《深入浅出设计模式》
《设计模式：可重用面向对象软件的要素》：又称“四人帮”书，还有 GOF
《 UNIX 和 Linux 系统管理手册》第4版
编程，Web 开发和 DevOps 新闻，教程和初学者专家的工具
indradhanush tutotials：写一个 Unix Shell&lt;/p&gt;

&lt;p&gt;查看他人的代码&lt;/p&gt;

&lt;p&gt;LiveEdu.tv : 那些构建应用、网站、游戏等的人的屏幕录像
Twitch.tv : twitch 编程社区&lt;/p&gt;

&lt;p&gt;程序员应该知道什么&lt;/p&gt;

&lt;p&gt;Programmer Competency Matrix 程序员能力矩阵: 可以获知我们作为程序员所处的级别的文章
GitHub.com Build software better, together 让我们一起构建更好的软件 : 存放你的项目并与他人协作的地方。（必须先了解 Git 才能有效地使用它）
Gitlab 提供免费的无限制（私有）存储仓库和无限协作方式。&lt;/p&gt;

&lt;p&gt;竞赛式编程&lt;/p&gt;

&lt;p&gt;WakaTime : 通过编辑器插件收集的编程指标的排行榜
HackerRank
Codeforces
topcoder
UVa Online Judge : 支持多语言的数百个问题。
HackerEarth - Programming challenges and Developer jobs
CodeChef
PKU ACM ICPC Practice problems
Archived Problems - Project Euler
Google Code Jam Practice and : 供练习的曾有的比赛问题
Sphere Online Judge (SPOJ)
Art of Problem Solving
Codingame : 通过游戏和挑战学习编程！
Codewars : 通过完成不同代码招数（问题）而升级
Codefights : 测试你的编程技巧&lt;/p&gt;

&lt;p&gt;计算机书籍&lt;/p&gt;

&lt;p&gt;IT eBooks - Free Download - Big Library : 没有任何广告和即时下载的电子书下载网站。
github.com/vhf/free-programming-books : 超过500本几乎任何你能想到的语言的免费电子书
Computer Science Books Online : 大约150本免费计算机电子书
Best books for GATE CSE
cses.fi/book.html
Become a Programmer, Motherfucker (list of books) : 来自 Zed A. Shaw 的详尽书单&lt;/p&gt;

&lt;p&gt;视频教程&lt;/p&gt;

&lt;p&gt;Tushar Roy : 来自一位印度 Youtuber 的算法和数据结构教程。
Derek Banas : 高质量的教程
thenewboston : 很好，但是与干货相比有些长篇大论
mycodeschool : 数据结构和算法的教程
CodingMadeEasy : C++ 教程
XDA-University - 帮助你学习安卓开发
DevTips : 网页开发教程
codedamn : 前端网页开发教程
算法的设计与分析
Vim 视频教程 - Flarfnoogins : 学习 vim 的优质视频教程
CS1: Higher Computing - Richard Buckland UNSW : 很好的计算机科学的入门教程
Kathryn Hodge : 给初学者的好视频
Pluralsight - 通过几门短课程学习软件开发、DevOps 和数据科学&lt;/p&gt;

&lt;p&gt;线上编译器和代码片段分享&lt;/p&gt;

&lt;p&gt;CodePad : 可供试验、测试和运行25多门语言的代码编辑器
JSFiddle : 以线上代码编辑器测试你的 JavaScript、 CSS、 HTML 或 CoffeeScript
Ideone.com : 线上编译器和调试工具，适用于60多门编程语言
Pastebin.com
Godbolt.org : 探索不同编译器的、带或不带优化的汇编输出的优秀工具&lt;/p&gt;

&lt;p&gt;开发人员的博客&lt;/p&gt;

&lt;p&gt;Coding Horror : 最佳编程博客之一
WildMl : 关于机器学习的博客
Armin Ronacher’s Thoughts and Writings : 关于 Python 和开放源代码的博客
Eli Bendersky : 从 Python 到 LLVM 的一切
Joel on Software
Stephen Haunts { Coding in the Trenches }
21世纪的编程
Clean Coder Blog : 《代码整洁之道》一书的作者的博客
Programming Blog : Yegor Bugayenko 的编程博客
CodeAhoy : 关于软件和人为因素的博客。100%经过人类测试。
stevehanov.ca
Geek Land
Late Developer
IT Enthusiast
blog.might.net
CSE Blog - quant, math, computer science puzzles
Small Programming Challenges and Puzzles
My Tech Interviews
HackerEarth Blog
Algo-Geeks
CoderGears Blog Insights from :  CoderGears 团队
Runhe Tian Coding Practice
Paul Graham Essays
Dan Dreams of Coding
Antonio081014’s Algorithms Codes
Math ∩ Programming
Takipi Blog : 主要关注于 Java 语言和 JVM
Coding Geek - 关于IT、编程和Javade一个博客
Daedtech.com : 关于软件的故事
Archives — Ask a Manager : HR 相关的内容
rudhakar Rayavaram : Sudhakar Rayavaram 的博客
Antirez - Redis Creator’s blog&lt;/p&gt;

&lt;p&gt;为了提升你的英语&lt;/p&gt;

&lt;p&gt;Quia - English
标点符号和大写的规则
语法和写作指南 : 给想提高英语语言技巧的人们
普渡大学线上写作实验室 (OWL)
Englishclub.com/learn-english&lt;/p&gt;

&lt;p&gt;当你对计算机科学相关的东西感到厌烦时&lt;/p&gt;

&lt;p&gt;r/ProgrammerHumor : 内容如其名的 reddit 子话题
Vsauce : 最佳 youtube 频道
TED : 关于技术、娱乐和设计的精彩演讲
CrashCourse : 关于不同主题的小课程
National Geographic : 来自世界各地的大量的高质量内容
Barcroft TV : 关于令人难以置信的各种各样的人们组成的世界的每日纪录短片
ColdFusion : 技术的过去、现在和未来
SmarterEveryDay : 关于我们周遭世界的许多惊人的科学信息，通常用高速摄影机拍摄。
Ridddle : 关于科学（主要是宇宙和太空但不仅仅是）的一个 youtube 频道。
SciShow : 你一直想知道的有趣问题的答案
Big Think : 专家驱动的、可操作的教育内容，以专家为特色，从比尔克林顿到 Bill Nye 。
Every Frame a Painting : 电影和电影制作的高质量的分析
TestTube News : 关于世界各地新闻的有趣信息
Reddit the front page of the internet : 在那里空闲时间要去死
How to live for long time ? : 长寿的秘密&lt;/p&gt;

&lt;p&gt;链接：https://www.oschina.net/translate/best-websites-a-programmer-should-visit（点击尾部阅读原文前往）&lt;/p&gt;

&lt;p&gt;●本文编号473，以后想阅读这篇文章直接输入473即可
●输入m获取文章目录
推荐↓↓↓&lt;/p&gt;

&lt;p&gt;Python编程
更多推荐《18个技术类微信公众号》
涵盖：程序人生、算法与数据结构、黑客技术与网络安全、大数据技术、前端开发、Java、Python、Web开发、安卓开发、iOS开发、C/C++、.NET、Linux、数据库、运维等。
阅读原文&lt;/p&gt;

&lt;p&gt;微信扫一扫
关注该公众号&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/15/books-sites.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/15/books-sites.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>脚本输出带颜色文字</title>
        <description>&lt;p&gt;文本终端的颜色可以使用“ANSI非常规字符序列”来生成。举例： 
　　　　echo -e “\033[44;37;5m ME \033[0m COOL” 
　　　　以上命令设置作用如下：背景色为蓝色，前景色为白色，字体闪烁，输出字符“ME”，然后重新设置屏幕到缺省设置，输出字符 “COOL”。“e”是命令 echo 的一个可选项，它用于激活特殊字符的解析器。“\033”引导非常规字符序列。“m”意味着设置属性然后结束非常规字符序列，这个例子里真正有效的字符是 “44;37;5” 和“0”。修改“44;37;5”可以生成不同颜色的组合，数值和编码的前后顺序没有关系。 
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;可以选择的编码如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&lt;/span&gt; 
　　　　编码 颜色/动作 
　　　　0 重新设置属性到缺省设置 
　　　　1 设置粗体 
　　　　2 设置一半亮度（模拟彩色显示器的颜色） 
　　　　4 设置下划线（模拟彩色显示器的颜色） 
　　　　5 设置闪烁 
　　　　7 设置反向图象 
　　　　22 设置一般密度 
　　　　24 关闭下划线 
　　　　25 关闭闪烁 
　　　　27 关闭反向图象 
　　　　30 设置黑色前景 
　　　　31 设置红色前景 
　　　　32 设置绿色前景 
　　　　33 设置棕色前景 
　　　　34 设置蓝色前景 
　　　　35 设置紫色前景 
　　　　36 设置青色前景 
　　　　37 设置白色前景 
　　　　38 在缺省的前景颜色上设置下划线 
　　　　39 在缺省的前景颜色上关闭下划线 
　　　　40 设置黑色背景 
　　　　41 设置红色背景 
　　　　42 设置绿色背景 
　　　　43 设置棕色背景 
　　　　44 设置蓝色背景 
　　　　45 设置紫色背景 
　　　　46 设置青色背景 
　　　　47 设置白色背景 
　　　　49 设置缺省黑色背景 
　&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;　　　　例如：在编译脚本文件时，对服务启动完成后的OK字符串设置成绿色
除了echo还有printf也可以显示颜色，这里就不多说了，用法一样的。那么开始用php调用吧。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;color_a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;echo -ne &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;\033&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[31m&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\033&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;color_b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;printf &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;\033&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[01;40;32m&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\033&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;aaaaaaaaaaaa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color_a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color_b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;  1 &lt;/span&gt;功能说明：显示文字。
&lt;span class=&quot;lineno&quot;&gt;  2 &lt;/span&gt;语 　 法：echo &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-ne&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;字符串&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; / &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--help&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;--version&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;  3 &lt;/span&gt;补充说明：echo会将输入的字符串送往标准输出。输出的字符串间以空白字符隔开, 并在最后加上换行号。
&lt;span class=&quot;lineno&quot;&gt;  4 &lt;/span&gt;参 　 数：    
&lt;span class=&quot;lineno&quot;&gt;  5 &lt;/span&gt;-n 不要在最后自动换行    
&lt;span class=&quot;lineno&quot;&gt;  6 &lt;/span&gt;-e 打开反斜杠ESC转义。
&lt;span class=&quot;lineno&quot;&gt;  7 &lt;/span&gt;若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出：           
&lt;span class=&quot;lineno&quot;&gt;  8 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt; 发出警告声；           
&lt;span class=&quot;lineno&quot;&gt;  9 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt; 删除前一个字符；           
&lt;span class=&quot;lineno&quot;&gt; 10 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt; 最后不加上换行符号；           
&lt;span class=&quot;lineno&quot;&gt; 11 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\f&lt;/span&gt; 换行但光标仍旧停留在原来的位置；           
&lt;span class=&quot;lineno&quot;&gt; 12 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt; 换行且光标移至行首；           
&lt;span class=&quot;lineno&quot;&gt; 13 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt; 光标移至行首，但不换行；           
&lt;span class=&quot;lineno&quot;&gt; 14 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt; 插入tab；           
&lt;span class=&quot;lineno&quot;&gt; 15 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\v&lt;/span&gt; 与&lt;span class=&quot;se&quot;&gt;\f&lt;/span&gt;相同；           
&lt;span class=&quot;lineno&quot;&gt; 16 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt; 插入&lt;span class=&quot;se&quot;&gt;\字&lt;/span&gt;符；           
&lt;span class=&quot;lineno&quot;&gt; 17 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;nn 插入nnn（八进制）所代表的ASCII字符；    
&lt;span class=&quot;lineno&quot;&gt; 18 &lt;/span&gt;-E 取消反斜杠ESC转义 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;默认&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;lineno&quot;&gt; 19 &lt;/span&gt;-help 显示帮助
&lt;span class=&quot;lineno&quot;&gt; 20 &lt;/span&gt;    -version 显示版本信息
&lt;span class=&quot;lineno&quot;&gt; 21 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;############################################################ #&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 22 &lt;/span&gt;echo输出颜色文本 echo命令改变样式，以输出不同颜色的文本，必须有 -e 选项&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;开启echo中的转义&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;。
&lt;span class=&quot;lineno&quot;&gt; 23 &lt;/span&gt;文本终端的显示颜色可以使用“ANSI非常规字符序列”来生成。
&lt;span class=&quot;lineno&quot;&gt; 24 &lt;/span&gt;例如：echo -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[44;37;5m ME\033[0m COOL&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 25 &lt;/span&gt;解释：&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[44;37;5m ME &amp;quot;&lt;/span&gt;设置背景为蓝色，前景为白色，闪烁光标，输出字符“ME”；      
&lt;span class=&quot;lineno&quot;&gt; 26 &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[0m COOL&amp;quot;&lt;/span&gt;重新设置屏幕到缺省设置，输出字符 “COOL”。      
&lt;span class=&quot;lineno&quot;&gt; 27 &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;e&amp;quot;&lt;/span&gt;是命令echo的一个可选项，它用于激活特殊字符的解析器。
&lt;span class=&quot;lineno&quot;&gt; 28 &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033&amp;quot;&lt;/span&gt;引导非常规字符序列&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;即&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[&amp;quot;&lt;/span&gt;表示终端转义字符开始，
&lt;span class=&quot;lineno&quot;&gt; 29 &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033&amp;quot;&lt;/span&gt;即退出键&amp;lt;ESC&amp;gt;的ASCII码&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;。
&lt;span class=&quot;lineno&quot;&gt; 30 &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;意味着设置属性然后结束非常规字符序列，这个例子里真正有效的字符是&lt;span class=&quot;s2&quot;&gt;&amp;quot;44;37;5&amp;quot;&lt;/span&gt;和&lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;。
&lt;span class=&quot;lineno&quot;&gt; 31 &lt;/span&gt;修改&lt;span class=&quot;s2&quot;&gt;&amp;quot;44;37;5&amp;quot;&lt;/span&gt;可以生成不同颜色的组合，数值和编码的前后顺序没有关系。     
&lt;span class=&quot;lineno&quot;&gt; 32 &lt;/span&gt;    可以选择的编码如下所示&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;这些颜色是ANSI标准颜色&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;：           编码          颜色/动作          
&lt;span class=&quot;lineno&quot;&gt; 33 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;      　     重新设置属性到缺省设置          
&lt;span class=&quot;lineno&quot;&gt; 34 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;     　      设置粗体          
&lt;span class=&quot;lineno&quot;&gt; 35 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;     　      设置一半亮度&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;模拟彩色显示器的颜色&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          
&lt;span class=&quot;lineno&quot;&gt; 36 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;     　      设置下划线&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;模拟彩色显示器的颜色&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          
&lt;span class=&quot;lineno&quot;&gt; 37 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;     　      设置闪烁          
&lt;span class=&quot;lineno&quot;&gt; 38 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;     　      设置反向图象          
&lt;span class=&quot;lineno&quot;&gt; 39 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;22&lt;/span&gt;    　      设置一般密度          
&lt;span class=&quot;lineno&quot;&gt; 40 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;24&lt;/span&gt;    　      关闭下划线          
&lt;span class=&quot;lineno&quot;&gt; 41 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;25&lt;/span&gt;     　     关闭闪烁          
&lt;span class=&quot;lineno&quot;&gt; 42 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;27&lt;/span&gt;     　     关闭反向图象          
&lt;span class=&quot;lineno&quot;&gt; 43 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;      　    设置黑色前景          
&lt;span class=&quot;lineno&quot;&gt; 44 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;31&lt;/span&gt;   　       设置红色前景          
&lt;span class=&quot;lineno&quot;&gt; 45 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;   　       设置绿色前景          
&lt;span class=&quot;lineno&quot;&gt; 46 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;   　       设置黄色前景          
&lt;span class=&quot;lineno&quot;&gt; 47 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;34&lt;/span&gt;   　       设置蓝色前景          
&lt;span class=&quot;lineno&quot;&gt; 48 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;35&lt;/span&gt;    　      设置紫色前景          
&lt;span class=&quot;lineno&quot;&gt; 49 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;36&lt;/span&gt;     　     设置青色前景          
&lt;span class=&quot;lineno&quot;&gt; 50 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;37&lt;/span&gt;    　      设置白色&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;灰色&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;前景          
&lt;span class=&quot;lineno&quot;&gt; 51 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;38&lt;/span&gt;      　    在缺省的前景颜色上设置下划线          
&lt;span class=&quot;lineno&quot;&gt; 52 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;39&lt;/span&gt;      　    在缺省的前景颜色上关闭下划线          
&lt;span class=&quot;lineno&quot;&gt; 53 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;40&lt;/span&gt;      　    设置黑色背景          
&lt;span class=&quot;lineno&quot;&gt; 54 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;41&lt;/span&gt;      　    设置红色背景          
&lt;span class=&quot;lineno&quot;&gt; 55 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;42&lt;/span&gt;     　     设置绿色背景          
&lt;span class=&quot;lineno&quot;&gt; 56 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;43&lt;/span&gt;     　     设置黄色背景          
&lt;span class=&quot;lineno&quot;&gt; 57 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;     　     设置蓝色背景          
&lt;span class=&quot;lineno&quot;&gt; 58 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;45&lt;/span&gt;     　     设置紫色背景          
&lt;span class=&quot;lineno&quot;&gt; 59 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;46&lt;/span&gt;     　     设置青色背景          
&lt;span class=&quot;lineno&quot;&gt; 60 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;47&lt;/span&gt;      　    设置白色&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;灰色&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;背景          
&lt;span class=&quot;lineno&quot;&gt; 61 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;49&lt;/span&gt;      　    设置缺省黑色背景    
&lt;span class=&quot;lineno&quot;&gt; 62 &lt;/span&gt;其他有趣的代码还有：         
&lt;span class=&quot;lineno&quot;&gt; 63 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2J  　   清除屏幕          
&lt;span class=&quot;lineno&quot;&gt; 64 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0q  　   关闭所有的键盘指示灯          
&lt;span class=&quot;lineno&quot;&gt; 65 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1q 　    设置&lt;span class=&quot;s2&quot;&gt;&amp;quot;滚动锁定&amp;quot;&lt;/span&gt;指示灯&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Scroll Lock&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          
&lt;span class=&quot;lineno&quot;&gt; 66 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2q 　    设置&lt;span class=&quot;s2&quot;&gt;&amp;quot;数值锁定&amp;quot;&lt;/span&gt;指示灯&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Num Lock&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          
&lt;span class=&quot;lineno&quot;&gt; 67 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3q 　    设置&lt;span class=&quot;s2&quot;&gt;&amp;quot;大写锁定&amp;quot;&lt;/span&gt;指示灯&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Caps Lock&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          
&lt;span class=&quot;lineno&quot;&gt; 68 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;:40H   把关闭移动到第15行，40列          
&lt;span class=&quot;lineno&quot;&gt; 69 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;07&lt;/span&gt;  　　    发蜂鸣生beep
&lt;span class=&quot;lineno&quot;&gt; 70 &lt;/span&gt;一些说明：     前景颜色各数字是对应背景颜色减去10。     结束非常规字符序列的&lt;span class=&quot;s2&quot;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;要紧跟前面的数字，不能有空格。    
&lt;span class=&quot;lineno&quot;&gt; 71 &lt;/span&gt;命令也可以写成echo -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;^[[44;37;5m ME \033[0m COOL&amp;quot;&lt;/span&gt;，其中的&lt;span class=&quot;s2&quot;&gt;&amp;quot;^[&amp;quot;&lt;/span&gt;是先按Ctrl-V,然后再按&amp;lt;ESC&amp;gt;键产生的。
&lt;span class=&quot;lineno&quot;&gt; 72 &lt;/span&gt;    输出带有颜色的文本，echo命令必须带有选项&lt;span class=&quot;s2&quot;&gt;&amp;quot;-e&amp;quot;&lt;/span&gt;。
&lt;span class=&quot;lineno&quot;&gt; 73 &lt;/span&gt;这种方法只能暂时改变echo命令输出的文本的样式，logout后就恢复为默认。修改.bashrc文件，可以修改默认的显示样式。 如：在.bashrc文件的最后面追加一行：echo -e &lt;span class=&quot;s1&quot;&gt;&amp;#39;\033[47;30m&amp;#39;&lt;/span&gt;。
&lt;span class=&quot;lineno&quot;&gt; 74 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#----------------------------------------------------------- #&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 75 &lt;/span&gt;建议:在shell文件的最前面，将echo命令的输出样式定义成变量。    
&lt;span class=&quot;lineno&quot;&gt; 76 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# define echo terminal style    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 77 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# color: 0~6 --&amp;gt; black, red, green, yellow, blue, purple, cyan, grey    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 78 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ECHO_STYLE_00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;       
&lt;span class=&quot;lineno&quot;&gt; 79 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# default style(black background, white foreground)    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 80 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ECHO_STYLE_01&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[41;33;1m&amp;quot;&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 81 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# red background, yellow foregound bold    &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 82 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ECHO_STYLE_01&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;echo command terminal style example&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ECHO_STYLE_00&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 83 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;############################################################ #&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 84 &lt;/span&gt;echo命令的其他用法
&lt;span class=&quot;lineno&quot;&gt; 85 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.光标跳到第60列，然后显示一个OK。    
&lt;span class=&quot;lineno&quot;&gt; 86 &lt;/span&gt;格式：echo -en &lt;span class=&quot;s1&quot;&gt;&amp;#39;\033[60G&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; OK    
&lt;span class=&quot;lineno&quot;&gt; 87 &lt;/span&gt;说明：&lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[&amp;quot;&lt;/span&gt;是终端转义字符开始，60G是命令。
&lt;span class=&quot;lineno&quot;&gt; 88 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;############################################################&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 89 &lt;/span&gt;然后给几个比较强大的脚本函数 &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;） cfont &lt;span class=&quot;c1&quot;&gt;#by zuoyang http://hi.baidu.com/test/&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 90 &lt;/span&gt;cfont&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 91 &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$#&lt;/span&gt;!&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 92 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; in                
&lt;span class=&quot;lineno&quot;&gt; 93 &lt;/span&gt;　-b&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 94 &lt;/span&gt;　　　-t&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 95 &lt;/span&gt;　-n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 96 &lt;/span&gt;              -black&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[30m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 97 &lt;/span&gt;              -red&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[31m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 98 &lt;/span&gt;              -green&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[32m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 99 &lt;/span&gt;              -yellow&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[33m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;100 &lt;/span&gt;              -blue&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[34m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;101 &lt;/span&gt;              -purple&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[35m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;102 &lt;/span&gt;              -cyan&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[36m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;103 &lt;/span&gt;              -white&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-gray&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[37m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;104 &lt;/span&gt;               -reset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;105 &lt;/span&gt;              -h&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-help&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;--help&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Usage: cfont -color1 message1 -color2 message2 ...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                        
&lt;span class=&quot;lineno&quot;&gt;106 &lt;/span&gt;                   &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eg:       cfont -red [ -blue message1 message2 -red ]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt;107 &lt;/span&gt;               *&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                 &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -ne &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt;108 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt;109 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shift&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;110 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;111 &lt;/span&gt;使用方法是 cfont -颜色 字符串...
&lt;span class=&quot;lineno&quot;&gt;112 &lt;/span&gt;如： cfont -cyan abc
&lt;span class=&quot;lineno&quot;&gt;113 &lt;/span&gt;注意使用时要换行需要加入 -n 选项。想要恢复默认的要加入 -reset选项。
&lt;span class=&quot;lineno&quot;&gt;114 &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;） 颜色码表&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/bin/bash T=&amp;#39;gYw&amp;#39;# The test text&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;        default 40m     41m     42m     43m     44m     45m     46m 47m&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;## FGs 为前景(foreground)色, BG 为背景(background)色&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; FGs in &lt;span class=&quot;s1&quot;&gt;&amp;#39;    m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;   1m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 30m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;30m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 31m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;31m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 32m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;32m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 33m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;33m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 34m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;34m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 35m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;35m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 36m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;36m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; 37m&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1;37m&amp;#39;&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;FG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$FGs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;tr -d &lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;             &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -en &lt;span class=&quot;s2&quot;&gt;&amp;quot; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FGs&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; \033[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$T&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;quot;&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; BG in 40m 41m 42m 43m 44m 45m 46m 47m&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;                 &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -en &lt;span class=&quot;s2&quot;&gt;&amp;quot; \033[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;\033[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BG&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$T&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; \033[0m&amp;quot;&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;           &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;        
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Thu, 14 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://xiazemin.github.io/MyBlog/jekyll/2017/09/14/%E8%84%9A%E6%9C%AC%E8%BE%93%E5%87%BA%E5%B8%A6%E9%A2%9C%E8%89%B2%E6%96%87%E5%AD%97.html</link>
        <guid isPermaLink="true">https://xiazemin.github.io/MyBlog/jekyll/2017/09/14/%E8%84%9A%E6%9C%AC%E8%BE%93%E5%87%BA%E5%B8%A6%E9%A2%9C%E8%89%B2%E6%96%87%E5%AD%97.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
